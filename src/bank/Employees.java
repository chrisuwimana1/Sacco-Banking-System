/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bank;

import com.placeholder.PlaceHolder;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Employees extends javax.swing.JFrame {
    PlaceHolder holder;
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBConnection conn;
    PleaseWait pl = new PleaseWait();
    Preferences prefs = Preferences.userNodeForPackage(Teller_Dashboard.class);
    DefaultTableModel model = new DefaultTableModel(); 
    boolean isLoading = false;
    private static final int ITERATIONS = 10000;
    private static final int KEY_LENGTH = 256;
    /**
     * Creates new form Employees
     */
    public Employees() {
        initComponents();
        try {
            conn = new DBConnection();
        } catch (BackingStoreException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (isLoading) {
            JOptionPane.showMessageDialog(null, "Loading employees, please hold on a second...", "Please wait...", JOptionPane.INFORMATION_MESSAGE);
        }
        
        try {
            getAllEmployees();
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void getAllEmployees() throws SQLException {
        
        isLoading = true;
        
        String sql = "SELECT `id`, `employee_key`, `title`, `firstname`, `lastname`, `username`, `email`, `password`, `last_login`, `status`, `date_created` FROM `employees` ORDER BY date_created desc";
        
        //clear all rows
        DefaultTableModel dtm = (DefaultTableModel) listemployees.getModel();
        dtm.setRowCount(0);
        dtm.setColumnCount(0);
        
        pst = conn.connection.prepareStatement(sql);  
        rs = pst.executeQuery();
        int count = 0;
        listemployees.setModel(model);
        model.addColumn("Id");
        model.addColumn("Firstname");
        model.addColumn("Lastname");
        model.addColumn("Username");
        model.addColumn("Email");
        model.addColumn("Title");
        model.addColumn("Last login");
        model.addColumn("Date Created");
        model.addColumn("Status");
        
        while(rs.next()) {
            
            isLoading = false;
            
            count++;
            model.addRow(new Object[]{count,rs.getString("firstname"), rs.getString("lastname"),
                rs.getString("username"),rs.getString("email"),
                rs.getString("title"),rs.getString("last_login"),
                rs.getString("date_created"), 
                rs.getInt("status") == 0 ? "Inactive" : "Active"
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listemployees = new javax.swing.JTable();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "All Employees"));

        listemployees.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listemployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Firstname", "Lastname", "Username", "Email", "Title", "Last login", "Date Created", "Status"
            }
        ));
        listemployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listemployeesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listemployees);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        start.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        start.setText("START");
        start.setEnabled(false);
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        stop.setText("STOP");
        stop.setEnabled(false);
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(424, Short.MAX_VALUE)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(373, 373, 373))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(412, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(89, 89, 89)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        setSize(new java.awt.Dimension(1035, 521));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void listemployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listemployeesMouseClicked
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) listemployees.getModel();
        int selectedIndex = listemployees.getSelectedRow();

        if (model.getValueAt(selectedIndex, 8).toString().equals("Inactive")) {
            start.setEnabled(true);
            stop.setEnabled(false);
        }else{
            stop.setEnabled(true);
            start.setEnabled(false);
        }
    }//GEN-LAST:event_listemployeesMouseClicked

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        int selectedIndex = listemployees.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) listemployees.getModel();

        String uname = model.getValueAt(selectedIndex, 3).toString();

        if (uname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Missing username");
        }

        if (!uname.isEmpty()) {
            try {
                String sql = "UPDATE `employees` SET `status`=? WHERE username=?";
                pst = conn.connection.prepareStatement(sql);
                pst.setInt(1, 1);
                pst.setString(2, uname);
                pst.execute();
                start.setEnabled(false);
                stop.setEnabled(false);

                getAllEmployees();
            } catch (SQLException ex) {
                Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_startActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        int selectedIndex = listemployees.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) listemployees.getModel();

        String uname = model.getValueAt(selectedIndex, 3).toString();

        if (uname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Missing username");
        }

        if (!uname.isEmpty()) {
            try {
                String sql = "UPDATE `employees` SET `status`=? WHERE username=?";
                pst = conn.connection.prepareStatement(sql);
                pst.setInt(1, 0);
                pst.setString(2, uname);
                pst.execute();
                start.setEnabled(false);
                stop.setEnabled(false);

                getAllEmployees();
            } catch (SQLException ex) {
                Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employees().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listemployees;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
