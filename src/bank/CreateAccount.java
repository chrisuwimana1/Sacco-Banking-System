/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bank;

// Java program to check if an email address
// is valid using Regex.
import java.awt.Frame;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.ParseException;
import java.util.Date;
import java.util.Random;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author chris
 */
public class CreateAccount extends javax.swing.JFrame {

    /**
     * Creates new form CreateAccount
     */
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBConnection conn;
    WritableRaster raster;
    DataBufferByte data;
    MaskFormatter mask;
    JDialog dialog;
    private Frame parentComponent;
    Preferences prefs = Preferences.userNodeForPackage(Teller_Dashboard.class);
    /**
     * Creates new form CreateAccount
     */
    String country = "RW";
    String le_book = "519";
    String visionLedgerAccount = "200080";
    String currency = "RWF";
    String employee_name;
    Helper helper;

    HashMap<String, String> villages;
    HashMap<String, String> economicsubsectorISICCodes;
    HashMap<String, Integer> naicsCodes;
    HashMap<String, Integer> occupationCodes;
    HashMap<String, Integer> incomeRangesCodes;
    HashMap<String, Integer> customerStatusCodes;
    HashMap<String, Integer> legalStatusCodes;
    HashMap<String, String> incomeFrequencyCodes;
    HashMap<String, Integer> relationshipTypeCodes;
    HashMap<String, Integer> educationCodes;
    HashMap<String, String> residenceTypeCodes;
    HashMap<String, Integer> nationalIdTypeCodes;
    HashMap<String, String> maritalStatusCodes;
    HashMap<String, String> genderCodes;
    HashMap<String, String> visionSBUCodes;
    HashMap<String, Integer> accountStatusCodes;
    HashMap<String, String> accountTypeCodes;
    HashMap<String, String> freezeStatusCodes;
    HashMap<String, String> publicSectorCodes;
    HashMap<String, String> institutionalSectorCodes;
    HashMap<String, String> accountOwnerShipCodes;
    HashMap<String, String> performanceClassCodes;
    HashMap<String, Integer> creditCategoryCodes;
    HashMap<String, String> economicSectorCodes;

    public CreateAccount() {
        initComponents();
        helper = new Helper();
        addAllHashMaps();
        try {
            conn = new DBConnection();
        } catch (BackingStoreException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }

        employee_name = prefs.get("firstname", "") + " " + prefs.get("lastname", "");
        try {
            mask = new MaskFormatter("310-####-10");
            lastAccountNumber();
            //lastCustomerId();
        } catch (ParseException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        number_of_dependants = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        spouse_name = new javax.swing.JTextField();
        next_of_kin_name = new javax.swing.JTextField();
        next_of_kin_id_no = new javax.swing.JTextField();
        next_of_kin_telephone = new javax.swing.JTextField();
        next_of_kin_email = new javax.swing.JTextField();
        next_of_kin_id_type = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        occupation = new javax.swing.JComboBox<>();
        jLabel73 = new javax.swing.JLabel();
        emp_address_1 = new javax.swing.JTextField();
        emp_address_2 = new javax.swing.JTextField();
        employee_id = new javax.swing.JTextField();
        employer_name = new javax.swing.JTextField();
        ssn_number = new javax.swing.JTextField();
        emp_country = new javax.swing.JComboBox<>();
        emp_village = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        comm_residence_type = new javax.swing.JComboBox<>();
        perm_address_1 = new javax.swing.JTextField();
        perm_address_2 = new javax.swing.JTextField();
        permanent_country = new javax.swing.JComboBox<>();
        comm_country = new javax.swing.JComboBox<>();
        residence = new javax.swing.JComboBox<>();
        comm_address_1 = new javax.swing.JTextField();
        comm_address_2 = new javax.swing.JTextField();
        comm_village = new javax.swing.JComboBox<>();
        perm_village = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        account_mandate_id_type = new javax.swing.JComboBox<>();
        account_mandate_name = new javax.swing.JTextField();
        account_mandate_id_number = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        account_ownership = new javax.swing.JComboBox<>();
        joint_participation_count = new javax.swing.JTextField();
        credit_category = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        account_status = new javax.swing.JComboBox<>();
        freeze_status = new javax.swing.JComboBox<>();
        performance_class = new javax.swing.JComboBox<>();
        institutional_sector_code = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        account_type = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        card_subscription = new javax.swing.JComboBox<>();
        interest_rate_credit = new javax.swing.JTextField();
        interest_rate_debit = new javax.swing.JTextField();
        account_status_date = new com.toedter.calendar.JDateChooser();
        public_sector_code = new javax.swing.JComboBox<>();
        economic_sub_sector = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        home_telephone = new javax.swing.JTextField();
        work_telephone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        fax_number_1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        fax_number_2 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        customer_status = new javax.swing.JComboBox<>();
        jLabel76 = new javax.swing.JLabel();
        related_party_name = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        naics_code = new javax.swing.JComboBox<>();
        jLabel78 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        internet_banking_subscription = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        related_party = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        economic_sub_sector_isic = new javax.swing.JComboBox<>();
        education = new javax.swing.JComboBox<>();
        mobile_banking_subscription = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        relationship_type = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        legal_status = new javax.swing.JComboBox<>();
        group_number = new javax.swing.JTextField();
        group_name = new javax.swing.JTextField();
        income_frequency = new javax.swing.JComboBox<>();
        income = new javax.swing.JComboBox<>();
        health_insurance_number = new javax.swing.JTextField();
        local_govt_member = new javax.swing.JComboBox<>();
        jLabel84 = new javax.swing.JLabel();
        customer_tin = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        marital_status = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        customer_open_date = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        forename_1 = new javax.swing.JTextField();
        customer_name = new javax.swing.JTextField();
        customer_gender = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        place_of_birth = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        surname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        date_of_birth = new com.toedter.calendar.JDateChooser();
        national_id_type = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        vision_sbu = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        social_economic_class = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        vision_ouc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        salutation = new javax.swing.JComboBox<>();
        nationality = new javax.swing.JComboBox<>();
        national_id_number = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        customer_acronym = new javax.swing.JTextField();
        forename_2 = new javax.swing.JTextField();
        create_account = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        account_number = new javax.swing.JFormattedTextField();
        customer_id = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NEW ACCOUNT");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Spouse Info"));

        number_of_dependants.setText("0");

        jLabel50.setText("Name of Next Kin: ");

        jLabel22.setText("Number Of Dependants (*):");

        jLabel54.setText("Next Of Kin Telephone:");

        jLabel52.setText("Next Of Kin ID Number:");

        jLabel53.setText("Next Of Kin Email:");

        jLabel51.setText("Next Of Kin ID Type:");

        jLabel49.setText("Spouse Name:");

        next_of_kin_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_of_kin_nameActionPerformed(evt);
            }
        });

        next_of_kin_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National_ID  (Mandatory for Rwandan Nationals)", "Driving_License", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(jLabel54)
                    .addComponent(jLabel53))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(next_of_kin_name, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(next_of_kin_email, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(next_of_kin_telephone, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(next_of_kin_id_no, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(number_of_dependants, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next_of_kin_id_type, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spouse_name))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(spouse_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(next_of_kin_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(next_of_kin_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(next_of_kin_id_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(next_of_kin_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(next_of_kin_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(number_of_dependants, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Employment Info"));

        jLabel72.setText("Employer Village:");

        jLabel69.setText("Employee ID:");

        jLabel21.setText("Occupation (*):");

        jLabel74.setText("SSN Number:");

        jLabel70.setText("Employer Address 1:");

        jLabel71.setText("Employer Address 2:");

        jLabel68.setText("Employer Name:");

        occupation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Occupation", "Commissioned armed forces officers", "Non-commissioned armed forces officers", "Armed forces occupations, other ranks", "Managing directors and chief executives", "Finance managers", "Agricultural and forestry production managers", "Financial and insurance services branch managers", "Hotel managers", "Restaurant managers", "Civil engineers", "Environmental engineers", "Mechanical engineers", "Electronics engineers", "Generalist medical practitioners ", "Specialist medical practitioners ", "Nursing professionals", "Traditional and complementary medicine professionals", "Veterinarians", "Pharmacists", "University and higher education teachers", "Secondary education teachers", "Primary school teachers", "Accountants", "Lawyers", "Judges", "Religious professionals", "Journalists", "Musicians, singers and composers", "Religious associate professionals", "Sports and fitness workers", "Athletes and sports players", "Sports coaches, instructors and officials", "Photographers", "Secretaries", "Bank tellers and related clerks", "Receptionists", "Cooks", "Waiters", "Bartenders", "Hairdressers", "Shop keepers", "Cashiers and ticket clerks", "Police officers", "Prison guards", "Security guards", "Field crop and vegetable growers", "Livestock and dairy producers", "Poultry producers", "House builders", "Potters and related workers", "Handicraft workers in wood, basketry and related materials", "Handicraft workers in textile, leather and related materials", "Building and related electricians", "Tailors, dressmakers, furriers and hatters", "Shoemakers and related workers", "Motorcycle drivers", "Car, taxi and van drivers", "Bus and tram drivers", "Heavy truck and lorry drivers", "Domestic cleaners and helpers", "Cleaners and helpers in offices, hotels and other establishments", "Crop farm labourers", "Livestock farm labourers", "Garbage and recycling collectors", "Not Applicable", "Others in General", "Unemployed" }));

        jLabel73.setText("Employer Country:");

        employee_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employee_idActionPerformed(evt);
            }
        });

        emp_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));

        emp_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amajyambere", "Bukinanyana", "Cyimana", "Gataba", "Itetero", "Kabare", "Kamuhire", "Karukamba", "Nyagacyamo", "Rwinzovu", "Urugwiro ", "Uruhongore", "Agasaro", "Gasharu", "Inkingi", "Kanserege", "Kigugu", "Ruganwa", "Umuco", "Umutekano", "Urugero", "Urwibutso", "Amahoro", "Bwiza", "Ihuriro", "Ineza", "Inyange", "Iriba", "Kabagari", "Ubumwe", "Umutako", "Urukundo", "Virunga" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel68))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employer_name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel73)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addGap(46, 46, 46)))
                        .addComponent(ssn_number, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel70)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(emp_address_1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel69)
                            .addGap(48, 48, 48)
                            .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(emp_country, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel71)
                                .addComponent(jLabel72))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(emp_address_2)
                                .addComponent(emp_village, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(employer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(emp_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(emp_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(emp_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(emp_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(ssn_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Address"));

        jLabel65.setText("Permanent Country (*):");

        jLabel59.setText("Communication Village:");

        jLabel63.setText("Permanent Address 2:");

        jLabel60.setText("Communication Country (*):");

        jLabel64.setText("Permanent Village:");

        jLabel58.setText("Communication Address 2:");

        jLabel61.setText("Communication Residence Type (*):");

        jLabel62.setText("Permanent Address 1 (*):");

        jLabel56.setText("Residence (*):");

        jLabel57.setText("Communication Address 1 (*):");

        comm_residence_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Owner", "Tenant" }));

        permanent_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));

        comm_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));

        residence.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));

        comm_address_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comm_address_2ActionPerformed(evt);
            }
        });

        comm_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amajyambere", "Bukinanyana", "Cyimana", "Gataba", "Itetero", "Kabare", "Kamuhire", "Karukamba", "Nyagacyamo", "Rwinzovu", "Urugwiro ", "Uruhongore", "Agasaro", "Gasharu", "Inkingi", "Kanserege", "Kigugu", "Ruganwa", "Umuco", "Umutekano", "Urugero", "Urwibutso", "Amahoro", "Bwiza", "Ihuriro", "Ineza", "Inyange", "Iriba", "Kabagari", "Ubumwe", "Umutako", "Urukundo", "Virunga" }));

        perm_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amajyambere", "Bukinanyana", "Cyimana", "Gataba", "Itetero", "Kabare", "Kamuhire", "Karukamba", "Nyagacyamo", "Rwinzovu", "Urugwiro ", "Uruhongore", "Agasaro", "Gasharu", "Inkingi", "Kanserege", "Kigugu", "Ruganwa", "Umuco", "Umutekano", "Urugero", "Urwibutso", "Amahoro", "Bwiza", "Ihuriro", "Ineza", "Inyange", "Iriba", "Kabagari", "Ubumwe", "Umutako", "Urukundo", "Virunga" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61)
                    .addComponent(jLabel62)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel60)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comm_residence_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comm_address_1)
                    .addComponent(comm_address_2)
                    .addComponent(comm_country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(perm_address_1)
                    .addComponent(perm_address_2)
                    .addComponent(permanent_country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(residence, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comm_village, 0, 222, Short.MAX_VALUE)
                    .addComponent(perm_village, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(residence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(comm_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(comm_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(comm_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel60)
                    .addComponent(comm_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(comm_residence_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(perm_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(perm_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(perm_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(permanent_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account Mandate Info"));

        jLabel48.setText("Account Mandate ID No:");

        jLabel47.setText("Account Mandate ID Type:");

        jLabel3.setText("Account Mandate Name:");

        account_mandate_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National_ID  (Mandatory for Rwandan Nationals)", "Driving_License", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(18, 18, 18)
                        .addComponent(account_mandate_id_number))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(account_mandate_name))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(account_mandate_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(account_mandate_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(account_mandate_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(account_mandate_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account Information"));

        jLabel37.setText("Interest rate/Debits (*):");

        account_ownership.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ownership", "Individual or Corporate", "Joint Application", "Sole proprietorship in which the owner is account owner", "By one of the partners", "Group Owners" }));

        joint_participation_count.setText("0");

        credit_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash Adavance", "Working Capital Credit", "Inventory Credit", "Discount Facility", "Bridging Credit", "Season Credit", "Personal Loan", "Vehicle Loan", "Residential Mortgage Loans", "Commercial Mortgages/Real Estate Leasing", "Leasing", "Fixed-Asset Loan", "Equipment Loans", "Other cash loans", "Undrawn line of credit", "Documentary Credit", "Caution", "Guarantee", "Acceptance", "Other Commitments" }));

        jLabel41.setText("Joint Participant Count (*):");

        account_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", "Closed", "Dormant", "Expired", "Matured", "Deleted" }));

        freeze_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Freeze", "Debit Freeze", "Credit Freeze", "Debit/Credit Freeze" }));

        performance_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal loans", "Watch loans", "Substandards loans", "Doubtful loans", "Loss loans", "Writtern Off" }));

        institutional_sector_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MFI/SACCO (Deposit Taking)", "Micro Finance Bank", "Investment Banks", "Development Bank", "Cooperative Bank", "Housing Bank & Assimilated" }));

        jLabel32.setText("Account Type (*): ");

        jLabel35.setText("Credit Category (*):");

        jLabel42.setText("Card Subscription (*):");

        jLabel43.setText("Economic Sub Sector (*):");

        jLabel39.setText("Public Sector Code (*):");

        jLabel34.setText("Performance Class (*):");

        jLabel44.setText("Account Status (*):");

        jLabel33.setText("Freeze Status (*):");

        account_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Account Type", "Current Account", "Saving Account", "Term Deposit Account", "Security Deposit Account", "Loan Account", "Office Account/ Internal Account/ Accounts owned by the stakeholder itself", "Insurance Policy", "Trust Account" }));

        jLabel36.setText("Institutional Sector Code (*):");

        jLabel38.setText("Interest rate/Credits (*):");

        jLabel40.setText("Account Ownership (*):");

        card_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "A", "B" }));

        interest_rate_credit.setText("24");
        interest_rate_credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interest_rate_creditActionPerformed(evt);
            }
        });

        interest_rate_debit.setText("0");

        public_sector_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Other Sectors", "Treasury", "Ministries", "Government Projects", "Joint Projects", "Special Funds", "Counterpart Funds", "Offices ", "Hospital And Community Health Center ", "Institutes And Research Centers ", "Others", "Province", "Districts", "Sectors", "RSSB", "MMI", "Related Public Companies ", "Public Companies" }));

        economic_sub_sector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9900", "0001", "1111", "1112", "1113", "1119", "1190", "1200", "1300", "1400", "1900", "2000", "3110", "3120", "3190", "3210", "3220", "3310", "3320", "3400", "3500", "3610", "3620", "3630", "3640", "3690", "3710", "3720", "3800", "3900", "4100", "4200", "4900", "5100", "5210", "5290", "6111", "6112", "6113", "6121", "6122", "6123", "6129", "6131", "6132", "6133", "6139", "6190", "6200", "6310", "6320", "6330", "6340", "6350", "6360", "6390", "6400", "6900", "7100", "7200", "7300", "7400", "7500", "7600", "7700", "7900", "8100", "8200", "8300", "8400", "8900", "9100", "9200", "9300", "9400", "9500" }));

        jLabel45.setText("Account Status Date (*):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel34)
                    .addComponent(jLabel38)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(card_subscription, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(economic_sub_sector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joint_participation_count, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(account_status_date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(account_status, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(credit_category, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(institutional_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(performance_class, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(freeze_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(account_type, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(public_sector_code, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(account_ownership, 0, 1, Short.MAX_VALUE)
                                .addComponent(interest_rate_credit)
                                .addComponent(interest_rate_debit)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(account_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(account_status_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(account_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(freeze_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(performance_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(credit_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(institutional_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(interest_rate_debit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(interest_rate_credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(public_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(account_ownership, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(joint_participation_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(card_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(economic_sub_sector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Contact Info"));

        jLabel20.setText("Work Phone (*):");

        work_telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_telephoneActionPerformed(evt);
            }
        });

        jLabel66.setText("Fax Number 1:");

        jLabel67.setText("Fax Number 2:");

        jLabel19.setText("Home Phone (*):");

        jLabel18.setText("Email (*):");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel19)
                                .addComponent(jLabel20))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(work_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(home_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addGap(119, 119, 119)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fax_number_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fax_number_2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel66)
                    .addComponent(jLabel67))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(home_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(work_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(fax_number_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(fax_number_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Miscelaneous Info"));

        customer_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", "Delete" }));
        customer_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_statusActionPerformed(evt);
            }
        });

        jLabel76.setText("Income Frequency:");

        jLabel75.setText("Income:");

        jLabel25.setText("Customer/Bank Relation (*):");

        naics_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default NAICS Code" }));

        jLabel78.setText("Local Government Member:");

        jLabel30.setText("Customer Status (*):");

        jLabel26.setText("Relationship Type (*):");

        internet_banking_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));

        jLabel27.setText("Education (*):");

        jLabel55.setText("Group Number:");

        related_party.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NON", "DIR", "MGT", "PRN", "STAFF", "OTH1", "OTH2", "OTH3" }));

        jLabel24.setText("NAICS Code (*):");

        jLabel79.setText("Health Insurance Number:");

        jLabel29.setText("Mobile Banking Subscription (*): ");

        economic_sub_sector_isic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Economic Sub Sector ISIC", "Growing of rice", "Growing of vegetables and melons, roots and tubers", "Raising of cattle and buffaloes", "Raising of sheep and goats", "Raising of swine/pigs", "Raising of poultry", "Mixed farming", "Manufacture of dairy products", "Manufacture of other food products n.e.c.", "Weaving of textiles", "Repair of machinery", "Electrical installation", "Wholesale of food, beverages and tobacco", "Wholesale of textiles, clothing and footwear", "Wholesale of other household goods", "Wholesale of other machinery and equipment", "Restaurants and mobile food service activities", "Beverage serving activities", "Higher education", "Sports and recreation education", "Cultural education", "Other education n.e.c.", "Hospital activities", "Activities of religious organizations", "Other personal service activities n.e.c." }));

        education.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Highest Education", "PHD", "Masters", "Bachelors Degree", "Diploma (A2 or A1 level)", "School attendace below A2 level", "High School", "Primary School", "Below Primary" }));

        mobile_banking_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));

        jLabel23.setText("Economic Sub Sector ISIC(*):");

        jLabel77.setText("Group Name:");

        jLabel46.setText("Internet Banking Subscription (*): ");

        relationship_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Direct or indirect relationship with the bank", "Non Related Party", "Spouse", "Husband", "Wife", "Father", "Mother", "Son", "Daughter", "Brother", "Sister", "Grandfather", "Grandmother", "Grandson", "Granddaughter", "Uncle", "Aunt", "Cousin", "Nephew", "Niece", "Father-in-law", "Mother-in-law", "Brother-in-law", "Sister-in-law", "Self" }));

        jLabel31.setText("Related Party Name:");

        jLabel83.setText("Legal Status (*):");

        legal_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Legal Status", "Sole Trader", "Partnership", "Private Company", "Public Company", "Trustee", "Co operatives", "Non-Profit Organization", " " }));

        income_frequency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monthly", "Quarterly", "Annual", "Daily", "Weekly", "Not Applicable" }));

        income.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0 -30,000", "30,001 - 100,000", "101,000 - 170,000", "171,000 - 230,000", "231,000 - 300,000", "301,000 - 370,000", "371,000 - 440,000", "441,000 - 510,000", "511,000 - 580,000", "581,000 - 650,000", "651,000 - 720,000", "721,000 - 790,000", "791,000 - 860,000", "861,000 - 930,000", "931,000 - 1,000,000", "1,001,000 - 1,070,000", "1,071,000 - 1,140,000", "1,141,000 - 1,210,000", "1,211,000 - 1,280,000", "1,281,000 - 1,350,000", "1,351,000 - 1,420,000", "1,421,000 - 1,490,000", "1,491,000 - 1,560,000", "1,561,000 - 1,630,000", "1,631,000 - 1,700,000", "1,701,000 - 1,770,000", "1,771,000 - 1,840,000", "1,841,000 - 1,910,000", "1,911,000 - 1,980,000", "1,981,000  and  above" }));

        health_insurance_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                health_insurance_numberActionPerformed(evt);
            }
        });

        local_govt_member.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));

        jLabel84.setText("Customer TIN:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(jLabel78)
                            .addComponent(jLabel79)
                            .addComponent(jLabel84))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(mobile_banking_subscription, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(internet_banking_subscription, 0, 250, Short.MAX_VALUE)
                                        .addComponent(customer_tin))
                                    .addComponent(local_govt_member, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(health_insurance_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel29)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel31))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(relationship_type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(related_party_name, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel27)
                            .addComponent(jLabel25))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(related_party, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(economic_sub_sector_isic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(naics_code, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(education, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel55)
                            .addComponent(jLabel77)
                            .addComponent(jLabel76)
                            .addComponent(jLabel75)
                            .addComponent(jLabel83))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(legal_status, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(group_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(group_name, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(income_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(economic_sub_sector_isic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(naics_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(related_party, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(relationship_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(related_party_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(education, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(internet_banking_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(mobile_banking_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(local_govt_member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(customer_tin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(health_insurance_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(income_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(group_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(group_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(legal_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Basic Info"));

        marital_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Marital Status", "Married", "Widowed", "Separated", "Divorced", "Single", "Not Applicable (For Corporates)" }));

        jLabel10.setText("Marital Status (*):");

        jLabel4.setText("Customer Name (*):");

        jLabel28.setText("Sacco Branch ID:");

        jLabel12.setText("National ID No (*):");

        jLabel15.setText("Business Segment (*):");

        jLabel13.setText("Opening Date (*):");

        jLabel1.setText("Middle Name:");

        jLabel17.setText("Social Economic Class (*):");

        jLabel2.setText("Short Name/Acronym (*):");

        customer_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", "Corporate" }));

        jLabel16.setText("Nationality (*):");

        jLabel14.setText("Gender (*):");

        jLabel5.setText("Last Name (*):");

        national_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National_ID(Mandatory for Rwandan Nationals)", "Driving_License", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));

        jLabel11.setText("National ID Type (*):");

        vision_sbu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Others", "Micro Enterprises", "Small Enterprises", "Medium Enterprises", "Large Enterprises", "Retail or Individuals", "NGOs, charity/welfare organisations", "Business Groups/Community", " " }));

        jLabel9.setText("Place of Birth (*):");

        social_economic_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "9999" }));
        social_economic_class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                social_economic_classActionPerformed(evt);
            }
        });

        jLabel6.setText("Salutation(*):");

        vision_ouc.setText("001");

        jLabel7.setText("Date Of Birth (*):");

        salutation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Salutation", "MISS", "MR", "MRS", "MS", "CORP", "J" }));

        nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));

        jLabel8.setText("First Name (*):");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel28)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(place_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(marital_status, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(national_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(social_economic_class, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vision_sbu, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vision_ouc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_open_date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(national_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salutation, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forename_1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forename_2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_acronym, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(salutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forename_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(forename_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(customer_acronym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(date_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(place_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(customer_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(marital_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(national_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(national_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(customer_open_date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(vision_ouc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(vision_sbu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(social_economic_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel11);

        create_account.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        create_account.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/save-icon.png"))); // NOI18N
        create_account.setText("SAVE");
        create_account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_accountActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/cancel-icon.png"))); // NOI18N
        jButton2.setText("CLEAR");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account"));

        jLabel80.setText("Account Number:");

        jLabel81.setText("Customer ID:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel80)
                    .addComponent(jLabel81))
                .addGap(26, 26, 26)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(account_number, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(customer_id))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(account_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81)
                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(create_account)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(create_account)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lastAccountNumber() {
        try {
            String sql = "SELECT COUNT(*) AS counts FROM (SELECT customer_information.id FROM customer_information) x";
            pst = conn.connection.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String numberAsString = String.format("%04d", rs.getInt("counts") + 1);
                String customerIdAsString = String.format("%010d", rs.getInt("counts") + 1);
                account_number.setValue("310-" + numberAsString + "-10");
                customer_id.setValue(customerIdAsString);
                //account_number.setv
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    protected String getSaltString(int n) {
        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder salt = new StringBuilder();
        Random rnd = new Random();
        while (salt.length() < n) { // length of the random string.
            int index = (int) (rnd.nextFloat() * SALTCHARS.length());
            salt.append(SALTCHARS.charAt(index));
        }
        String saltStr = salt.toString();
        return saltStr;
    }

    private boolean doesAccountExist(String acc) throws SQLException {
        boolean accountExists = false;
        // TODO Auto-generated method stub
        if (!acc.isEmpty()) {
            String sql = "SELECT `Account_Number` FROM `customer_information` WHERE Account_Number = ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, acc);
            rs = pst.executeQuery();
            if (rs.next()) {
                accountExists = true;
            }
        }
        return accountExists;
    }

    private boolean saveInitialDeposit(String accountNo, String openingDate) throws SQLException, ParseException {

        boolean message = false;
        String sql = "insert into initial_deposit(Account_Number, Initial_Deposit_Date, Teller) values (?,?,?)";

        pst = conn.connection.prepareStatement(sql);
        pst.setString(1, accountNo);
        pst.setString(2, openingDate);
        pst.setString(3, employee_name);
        int saved = pst.executeUpdate();
        if (saved > 0) {
            return message = true;
        }
        return message = false;

    }

    private boolean saveAccountInformation(String country, String le_book, String accountNumber,
            String customerName, String visionOUC, String visionSBUCode, int accountStatus,
            String accountStatusDate, String customerID, String accountOfficer, String currency,
            String visionLedgerAccount, String accountType, String openingDate, String freezeStatusCode,
            float interestRateDebit, float interestRateCredit, String economicSubSectorCode,
            String economicSubSectorCodeISIC, String publicSectorCode, String institutionalSectorCode,
            String accountOwnership, int jointParticipationCount, String cardSubscription,
            String performanceClass, int creditCategory, String merchantId, String visionSBUFull,
            String accountStatusFull, String accountTypeFull, String freezeStatusFull,
            String economicSubSectorCodeISICFull, String publicSectorFull, String institutionalSectorFull,
            String accountOwnershipFull, String performanceClassFull, String creditCategoryFull) throws SQLException, ParseException {

        boolean message = false;
        String sql = "insert into account_information (`Country`, "
                + "`LE_Book`,"
                + " `Account_No`,"
                + " `Account_Number`,"
                + " `Account_Name`,"
                + " `Vision_OUC`,"
                + " `Vision_SBU`,"
                + " `Account_Status`,"
                + " `Account_Status_Date`,"
                + " `Customer_ID`,"
                + " `Account_Officer`,"
                + " `Currency`,"
                + " `Vision_GL`,"
                + " `Account_Type`,"
                + " `Account_Open_Date`,"
                + " `Freeze_Status`,"
                + " `Int_Rate_Dr`,"
                + " `Int_Rate_Cr`,"
                + " `Economic_Sub_Sector_Code`,"
                + " `Economic_Sub_Sector_Code_ISIC`,"
                + " `Public_Sector_Code`,"
                + " `Institutional_Sector_Code`,"
                + " `Account_Ownership`,"
                + " `Joint_Participant_Count`,"
                + " `Card_Subscription`,"
                + " `Performance_Class`,"
                + " `Credit_Category`,"
                + " `Merchant_Id`)  values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        pst = conn.connection.prepareStatement(sql);
        pst.setString(1, country);
        pst.setString(2, le_book);
        pst.setString(3, customerID);
        pst.setString(4, accountNumber);
        pst.setString(5, customerName);
        pst.setString(6, visionOUC);
        pst.setString(7, visionSBUCode);
        pst.setInt(8, accountStatus);
        pst.setString(9, accountStatusDate);
        pst.setString(10, customerID);
        pst.setString(11, accountOfficer);
        pst.setString(12, currency);
        pst.setString(13, visionLedgerAccount);
        pst.setString(14, accountType);
        pst.setString(15, openingDate);
        pst.setString(16, freezeStatusCode);
        pst.setFloat(17, interestRateDebit);
        pst.setFloat(18, interestRateCredit);
        pst.setString(19, economicSubSectorCode);
        pst.setString(20, economicSubSectorCodeISIC);
        pst.setString(21, publicSectorCode);
        pst.setString(22, institutionalSectorCode);
        pst.setString(23, accountOwnership);
        pst.setInt(24, jointParticipationCount);
        pst.setString(25, cardSubscription);
        pst.setString(26, performanceClass);
        pst.setInt(27, creditCategory);
        pst.setString(28, merchantId);
        int saved = pst.executeUpdate();
        if (saved > 0) {
            return message = true;
        }
        return message = false;
    }

    private void saveBalance(String accountNumber, float currentBalance, Date date) {

        try {
            String sql = "insert into balance (Account_Number,current_balance, date_changed) values (?,?,?)";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, accountNumber);
            pst.setFloat(2, currentBalance);
            pst.setTimestamp(3, (Timestamp) date);
            pst.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void saveCustomerInformation(String customerKey, String accountNumber, String country, String le_book, String customerID,
            String salutationString, String customerName, String surnameString, String forename1, String forename2,
            String customerAcronym, String visionOUC, String visionSBUCode, String accountOfficer, String openingDate,
            String gender, String birthDate, String placeOfBirth, String maritalStatus, String spouseName,
            int socialEconomicClassCode, String nextOfKinName, int nextOfKinIdType, String nextOfKinIdNumber,
            String nextofKinPhone, String nextOfKinEmail, String numberOfDependants, String accountMandateName,
            int accountMandateIdType, String accountMandateIdNumber, String nationalityString,
            String residenceString, String commAddress1, String commAddress2, String commVillage, String commCountry,
            String commResidenceType, String permAddress1, String permAddress2, String permVillage, String permCountry,
            String emailID, String workTelephone, String homeTelephone, String faxNumber1, String faxNumber2,
            int educationCode, String customerTin, int naicsCode, String economicSubSectorCodeISIC,
            String relatedParty, int relationshipTypeCode, String relatedPartyName, String localGovtMember,
            String internetBankingSubscription, String mobileBankingSubscription, String ssnNumber,
            int nationalIdType, String nationalIDNumber, String healthInsuranceNumber, int occupationCode,
            String employerName, String employeeID, String empAddress1, String empAddress2, String empVillage,
            String empCountry, int incomeCode, String incomeFrequencyCode, String groupName, String groupNumber,
            int legalStatusCode, int customerStatusCode, String visionSBUFull, String genderFull, String maritalStatusFull,
            String accountMandateIdTypeFull, String educationFull, String naicsCodeFull, String economicSubSectorCodeISICFull,
            String relationshipTypeFull, String nationalIdTypeFull, String occupationFull, String customerStatusFull,
            String commVillageFull, String permVillageFull, String empVillageFull) throws SQLException, ParseException {

        String accountStatusFull = (String) account_status.getSelectedItem();
        int accountStatus = accountStatusCodes.get((String) account_status.getSelectedItem());
        String accountTypeFull = (String) account_type.getSelectedItem();
        String accountType = accountTypeCodes.get((String) account_type.getSelectedItem());
        String freezeStatusFull = (String) freeze_status.getSelectedItem();
        String freezeStatusCode = freezeStatusCodes.get((String) freeze_status.getSelectedItem());
        float interestRateDebit = Float.valueOf(interest_rate_debit.getText().trim());
        float interestRateCredit = Float.valueOf(interest_rate_credit.getText().trim());

        String economicSubSectorCode = (String) economic_sub_sector.getSelectedItem();
        String publicSectorFull = (String) public_sector_code.getSelectedItem();
        String publicSectorCode = publicSectorCodes.get((String) public_sector_code.getSelectedItem());
        String institutionalSectorFull = (String) institutional_sector_code.getSelectedItem();
        String institutionalSectorCode = institutionalSectorCodes.get((String) institutional_sector_code.getSelectedItem());
        String accountOwnershipFull = (String) account_ownership.getSelectedItem();
        String accountOwnership = accountOwnerShipCodes.get((String) account_ownership.getSelectedItem());
        int jointParticipationCount = Integer.parseInt(joint_participation_count.getText());
        String cardSubscription = (String) card_subscription.getSelectedItem();
        String performanceClassFull = (String) performance_class.getSelectedItem();
        String performanceClass = performanceClassCodes.get((String) performance_class.getSelectedItem());
        String creditCategoryFull = (String) credit_category.getSelectedItem();
        int creditCategory = creditCategoryCodes.get((String) credit_category.getSelectedItem());
        String merchantId = "";
        // float initialDeposit = Float.parseFloat(initial_deposit.getText());

        java.util.Date acctStatusDate = account_status_date.getDate();

        java.sql.Date accountStatusDate = new java.sql.Date(acctStatusDate.getTime());

        java.sql.Timestamp currentDate = new java.sql.Timestamp(new java.util.Date().getTime());

        try {
            String sql = "insert into customer_information(Customer_Key,"
                    + "Account_Number,"
                    + "Country,"
                    + "LE_Book,"
                    + "Customer_ID,"
                    + "Salutation,"
                    + "Customer_Name,"
                    + "Surname,"
                    + "Forename_1,"
                    + "Forename_2,"
                    + "Customer_Acronym,"
                    + "Vision_OUC,"
                    + "Vision_SBU,"
                    + "Account_Officer,"
                    + "Customer_Open_Date,"
                    + "Customer_Gender,"
                    + "Date_of_Birth,"
                    + "Place_of_Birth,"
                    + "Marital_Status,"
                    + "Spouse_Name,"
                    + "Social_Economic_Class,"
                    + "Next_of_kin_Name,"
                    + "Next_of_kin_ID_Type,"
                    + "Next_of_kin_ID_Number,"
                    + "Next_of_kin_Telephone,"
                    + "Next_of_kin_Email_ID,"
                    + "Number_Of_Dependants,"
                    + "Account_Mandate_Name,"
                    + "Account_Mandate_ID_Type,"
                    + "Account_Mandate_ID_Number,"
                    + "Nationality,"
                    + "Residence,"
                    + "Comm_Address_1,"
                    + "Comm_Address_2,"
                    + "Comm_Village,"
                    + "Comm_Country,"
                    + "Comm_Residence_Type,"
                    + "Perm_Address_1,"
                    + "Perm_Address_2,"
                    + "Perm_Village,"
                    + "Perm_Country,"
                    + "Email_ID,"
                    + "Work_Telephone,"
                    + "Home_Telephone,"
                    + "Fax_Number_1,"
                    + "Fax_Number_2,"
                    + "Education,"
                    + "Customer_TIN,"
                    + "NAICS_Code,"
                    + "Economic_Sub_Sector_Code_ISIC,"
                    + "Related_Party,"
                    + "Relationship_Type,"
                    + "Related_Party_Name,"
                    + "Local_Govt_Member,"
                    + "Internet_Banking_Subscription,"
                    + "Mobile_Banking_Subscription,"
                    + "SSN_Number,"
                    + "National_ID_Type,"
                    + "National_ID_Number,"
                    + "Health_Insurance_Number,"
                    + "Occupation,"
                    + "Employer_Name,"
                    + "Employee_ID,"
                    + "Emp_Address_1,"
                    + "Emp_Address_2,"
                    + "Emp_Village,"
                    + "Emp_Country,"
                    + "Income,"
                    + "Income_Frequency,"
                    + "Group_Name,"
                    + "Group_Number,"
                    + "Legal_Status,"
                    + "Customer_Status) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, customerKey);
            pst.setString(2, accountNumber);
            pst.setString(3, country);
            pst.setString(4, le_book);
            pst.setString(5, customerID);
            pst.setString(6, salutationString);
            pst.setString(7, customerName);
            pst.setString(8, surnameString);
            pst.setString(9, forename1);
            pst.setString(10, forename2);
            pst.setString(11, customerAcronym);
            pst.setString(12, visionOUC);
            pst.setString(13, visionSBUCode);
            pst.setString(14, accountOfficer);
            pst.setString(15, openingDate);
            pst.setString(16, gender);
            pst.setString(17, birthDate);
            pst.setString(18, placeOfBirth);
            pst.setString(19, maritalStatus);
            pst.setString(20, spouseName);
            pst.setInt(21, socialEconomicClassCode);
            pst.setString(22, nextOfKinName);
            pst.setInt(23, nextOfKinIdType);
            pst.setString(24, nextOfKinIdNumber);
            pst.setString(25, nextofKinPhone);
            pst.setString(26, nextOfKinEmail);
            pst.setString(27, numberOfDependants);
            pst.setString(28, accountMandateName);
            pst.setInt(29, accountMandateIdType);
            pst.setString(30, accountMandateIdNumber);
            pst.setString(31, nationalityString);
            pst.setString(32, residenceString);
            pst.setString(33, commAddress1);
            pst.setString(34, commAddress2);
            pst.setString(35, commVillage);
            pst.setString(36, commCountry);
            pst.setString(37, commResidenceType);
            pst.setString(38, permAddress1);
            pst.setString(39, permAddress2);
            pst.setString(40, permVillage);
            pst.setString(41, permCountry);

            pst.setString(42, emailID);
            pst.setString(43, workTelephone);
            pst.setString(44, homeTelephone);
            pst.setString(45, faxNumber1);
            pst.setString(46, faxNumber2);
            pst.setInt(47, educationCode);
            pst.setString(48, customerTin);
            pst.setInt(49, naicsCode);
            pst.setString(50, economicSubSectorCodeISIC);
            pst.setString(51, relatedParty);
            pst.setInt(52, relationshipTypeCode);
            pst.setString(53, relatedPartyName);
            pst.setString(54, localGovtMember);
            pst.setString(55, internetBankingSubscription);
            pst.setString(56, mobileBankingSubscription);
            pst.setString(57, ssnNumber);
            pst.setInt(58, nationalIdType);
            pst.setString(59, nationalIDNumber);
            pst.setString(60, healthInsuranceNumber);
            pst.setInt(61, occupationCode);
            pst.setString(62, employerName);
            pst.setString(63, employeeID);
            pst.setString(64, empAddress1);
            pst.setString(65, empAddress2);
            pst.setString(66, empVillage);
            pst.setString(67, empCountry);
            pst.setInt(68, incomeCode);
            pst.setString(69, incomeFrequencyCode);
            pst.setString(70, groupName);
            pst.setString(71, groupNumber);
            pst.setInt(72, legalStatusCode);
            pst.setInt(73, customerStatusCode);
            int saved = pst.executeUpdate();
            if (saved > 0) {
                JOptionPane.showMessageDialog(null, "Customer information info was created!");

                if (saveAccountInformation(country, le_book, accountNumber, customerName,
                        visionOUC, visionSBUCode, accountStatus, accountStatusDate.toString(),
                        customerID, accountOfficer, currency, visionLedgerAccount, accountType,
                        openingDate, freezeStatusCode, interestRateDebit, interestRateCredit,
                        economicSubSectorCode, economicSubSectorCodeISIC, publicSectorCode,
                        institutionalSectorCode, accountOwnership, jointParticipationCount,
                        cardSubscription, performanceClass, creditCategory, merchantId, visionSBUFull,
                        accountStatusFull, accountTypeFull, freezeStatusFull, economicSubSectorCodeISICFull,
                        publicSectorFull, institutionalSectorFull, accountOwnershipFull, performanceClassFull,
                        creditCategoryFull) && saveInitialDeposit(accountNumber, openingDate)) {
                    saveBalance(accountNumber, 0, (Timestamp) currentDate);
                    JOptionPane.showMessageDialog(null, "A New Account was created!");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Something is wrong!");
                }

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void saveCustomer() {

        //Validation
        System.out.println(economicsubsectorISICCodes.get(economic_sub_sector_isic.getSelectedItem().toString()));
        if (salutation.getSelectedItem().toString().equalsIgnoreCase("Select Salutation")) {
            JOptionPane.showMessageDialog(null, "Invalid Salutation", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (account_number.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The account number field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (account_number.getText().trim().length() != 11) {
            JOptionPane.showMessageDialog(null, "The account number field is badly formatted", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Customer name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (surname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The last name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (forename_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The first name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_acronym.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The customer acronym field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_acronym.getText().length() > 20) {
            JOptionPane.showMessageDialog(null, "The customer acronym field must be at most 20 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (date_of_birth.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No date of birth specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (place_of_birth.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The place of birth field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (genderCodes.get(customer_gender.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The Customer gender field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (maritalStatusCodes.get(marital_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The marital status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (national_id_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The ID number field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (nationalIdTypeCodes.get(national_id_type.getSelectedItem().toString()) == 2 && national_id_number.getText().length() != 16) {
            JOptionPane.showMessageDialog(null, "The ID Number field should be 16 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_open_date.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No account opening date specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (vision_ouc.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Sacco Branch field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (visionSBUCodes.get(vision_sbu.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The business segment field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (number_of_dependants.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The number of dependants field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (residence.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The residence field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (comm_address_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The communication address field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (perm_address_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The permanent address field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (email.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Email field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!helper.isEmailValid(email.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Email field Format", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (work_telephone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The work telephone field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (work_telephone.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The work telephone field has to be 10 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (home_telephone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The home telephone field is required!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (home_telephone.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The home telephone field has to be 10 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (occupationCodes.get(occupation.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The occupation field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (naicsCodes.get(naics_code.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The NAICS Code field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (economicsubsectorISICCodes.get(economic_sub_sector_isic.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The economic sub sector field ISIC is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (educationCodes.get(education.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The education field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customerStatusCodes.get(customer_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The customer status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (legalStatusCodes.get(legal_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The legal status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (accountStatusCodes.get(account_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The account status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (account_status_date.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No account status date specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (accountTypeCodes.get(account_type.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The account type field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (freezeStatusCodes.get(freeze_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The freeze status is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (interest_rate_credit.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The interest rate credit field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (interest_rate_debit.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The interest rate debit field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (joint_participation_count.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The joint participation count field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(emp_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The Emp Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(comm_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The Comm Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(perm_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The perm Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (employee_id.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "The Employee ID field shoud be at most 15 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (health_insurance_number.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "The Health Insurance Number field shoud be at most 15 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_tin.getText().length() > 10) {
            JOptionPane.showMessageDialog(null, "The Customer TIN field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (nationality.getSelectedItem().toString().equalsIgnoreCase("Select Nationality")) {
            JOptionPane.showMessageDialog(null, "The nationality field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (social_economic_class.getSelectedItem().toString().equalsIgnoreCase("Select Social Economic Class")) {
            JOptionPane.showMessageDialog(null, "The Social Economic Class field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Customer ID field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The customer ID field is badly formatted", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (accountOwnerShipCodes.get(account_ownership.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The Account Ownership field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String accountNumber = account_number.getText();
            String customerKey = getSaltString(200);
            String customerID = customer_id.getText();
            String salutationString = (String) salutation.getSelectedItem();
            String customerName = customer_name.getText();
            String surnameString = surname.getText();
            String forename1 = forename_1.getText();
            String forename2 = forename_2.getText();
            String customerAcronym = customer_acronym.getText();
            String visionOUC = vision_ouc.getText();
            String visionSBUCode = visionSBUCodes.get((String) vision_sbu.getSelectedItem());
            String visionSBUFull = (String) vision_sbu.getSelectedItem();
            String accountOfficer = "";
            String gender = genderCodes.get((String) customer_gender.getSelectedItem());
            String genderFull = (String) customer_gender.getSelectedItem();
            String placeOfBirth = place_of_birth.getText();
            String maritalStatus = maritalStatusCodes.get((String) marital_status.getSelectedItem());
            String maritalStatusFull = (String) marital_status.getSelectedItem();
            String spouseName = spouse_name.getText();
            int socialEconomicClassCode = Integer.parseInt((String) social_economic_class.getSelectedItem());

            String nextOfKinName = next_of_kin_name.getText();
            int nextOfKinIdType = 2;
            String nextOfKinIdNumber = next_of_kin_id_no.getText();
            String nextofKinPhone = "";
            String nextOfKinEmail = email.getText();
            String numberOfDependants = number_of_dependants.getText();
            String accountMandateName = account_mandate_name.getText();

            int accountMandateIdType = 2;
            String accountMandateIdTypeFull = (String) account_mandate_id_type.getSelectedItem();
            String accountMandateIdNumber = account_mandate_id_number.getText();
            String nationalityString = (String) nationality.getSelectedItem();
            String residenceString = (String) residence.getSelectedItem();
            String commAddress1 = comm_address_1.getText();
            String commAddress2 = comm_address_2.getText();
            String commVillage = villages.get(comm_village.getSelectedItem().toString());
            String commCountry = (String) comm_country.getSelectedItem();
            String commResidenceType = residenceTypeCodes.get((String) comm_residence_type.getSelectedItem());
            String permAddress1 = perm_address_1.getText();
            String permAddress2 = perm_address_2.getText();
            String permVillage = villages.get(perm_village.getSelectedItem().toString());
            String permCountry = (String) permanent_country.getSelectedItem();
            String emailID = email.getText();
            String workTelephone = work_telephone.getText();
            String homeTelephone = home_telephone.getText();
            String faxNumber1 = fax_number_1.getText();
            String faxNumber2 = fax_number_2.getText();
            int educationCode = educationCodes.get((String) education.getSelectedItem());
            String educationFull = (String) education.getSelectedItem();
            String customerTin = customer_tin.getText();
            int naicsCode = naicsCodes.get((String) naics_code.getSelectedItem());
            String naicsCodeFull = (String) naics_code.getSelectedItem();
            String economicSubSectorCodeISIC = economicsubsectorISICCodes.get((String) economic_sub_sector_isic.getSelectedItem());
            String economicSubSectorCodeISICFull = (String) economic_sub_sector_isic.getSelectedItem();
            String relatedParty = (String) related_party.getSelectedItem();
            String relationshipTypeFull = (String) relationship_type.getSelectedItem();
            int relationshipTypeCode = relationshipTypeCodes.get((String) relationship_type.getSelectedItem());
            String relatedPartyName = related_party_name.getText();
            String localGovtMember = (String) local_govt_member.getSelectedItem();
            String internetBankingSubscription = (String) internet_banking_subscription.getSelectedItem();
            String mobileBankingSubscription = (String) mobile_banking_subscription.getSelectedItem();
            String ssnNumber = ssn_number.getText();
            int nationalIdType = nationalIdTypeCodes.get((String) national_id_type.getSelectedItem());
            String nationalIdTypeFull = (String) national_id_type.getSelectedItem();
            String nationalIDNumber = national_id_number.getText();
            String healthInsuranceNumber = health_insurance_number.getText();
            int occupationCode = occupationCodes.get((String) occupation.getSelectedItem());
            String occupationFull = (String) occupation.getSelectedItem();
            String employerName = employer_name.getText();
            String employeeID = employee_id.getText();
            String empAddress1 = emp_address_1.getText();
            String empAddress2 = emp_address_2.getText();
            String empVillage = villages.get(emp_village.getSelectedItem().toString());
            String empCountry = (String) emp_country.getSelectedItem();
            int incomeCode = incomeRangesCodes.get((String) income.getSelectedItem());
            String incomeFrequencyCode = incomeFrequencyCodes.get((String) income_frequency.getSelectedItem());
            String groupName = group_name.getText();
            String groupNumber = group_number.getText();
            int legalStatusCode = legalStatusCodes.get((String) legal_status.getSelectedItem());
            int customerStatusCode = customerStatusCodes.get((String) customer_status.getSelectedItem());
            String customerStatusFull = (String) customer_status.getSelectedItem();
            String commVillageFull = (String) comm_village.getSelectedItem();
            String permVillageFull = (String) perm_village.getSelectedItem();
            String empVillageFull = (String) emp_village.getSelectedItem();

            java.util.Date d = date_of_birth.getDate();
            java.util.Date o = customer_open_date.getDate();
            // java.util.Date acctStatusDate = account_status_date.getDate();

            java.sql.Date birthDate = new java.sql.Date(d.getTime());
            java.sql.Date openingDate = new java.sql.Date(o.getTime());

            try {
                if (doesAccountExist(accountNumber) == false) {
                    /*doesA*/ dialog = new JDialog(parentComponent, true); // modal
                    dialog.setUndecorated(true);
                    JProgressBar bar = new JProgressBar();
                    bar.setIndeterminate(true);
                    bar.setString("Please wait");
                    dialog.add(bar);
                    dialog.pack();
                    SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
                        @Override
                        protected String doInBackground() throws Exception {
                            saveCustomerInformation(customerKey, accountNumber, country, le_book, customerID,
                                    salutationString, customerName, surnameString, forename1, forename2,
                                    customerAcronym, visionOUC, visionSBUCode, accountOfficer, openingDate.toString(),
                                    gender, birthDate.toString(), placeOfBirth, maritalStatus, spouseName,
                                    socialEconomicClassCode, nextOfKinName, nextOfKinIdType, nextOfKinIdNumber,
                                    nextofKinPhone, nextOfKinEmail, numberOfDependants, accountMandateName,
                                    accountMandateIdType, accountMandateIdNumber, nationalityString,
                                    residenceString, commAddress1, commAddress2, commVillage, commCountry,
                                    commResidenceType, permAddress1, permAddress2, permVillage, permCountry,
                                    emailID, workTelephone, homeTelephone, faxNumber1, faxNumber2,
                                    educationCode, customerTin, naicsCode, economicSubSectorCodeISIC,
                                    relatedParty, relationshipTypeCode, relatedPartyName, localGovtMember,
                                    internetBankingSubscription, mobileBankingSubscription, ssnNumber,
                                    nationalIdType, nationalIDNumber, healthInsuranceNumber, occupationCode,
                                    employerName, employeeID, empAddress1, empAddress2, empVillage,
                                    empCountry, incomeCode, incomeFrequencyCode, groupName, groupNumber,
                                    legalStatusCode, customerStatusCode, visionSBUFull, genderFull, maritalStatusFull,
                                    accountMandateIdTypeFull, educationFull, naicsCodeFull, economicSubSectorCodeISICFull,
                                    relationshipTypeFull, nationalIdTypeFull, occupationFull, customerStatusFull,
                                    commVillageFull, permVillageFull, empVillageFull);

                            return null;
                        }

                        @Override
                        protected void done() {
                            dialog.dispose();
                        }
                    };
                    worker.execute();
                    dialog.setVisible(true);
                    try {
                        worker.get();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "This account already exists!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }

    private void customer_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_statusActionPerformed

    private void health_insurance_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_health_insurance_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_health_insurance_numberActionPerformed

    private void create_accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_accountActionPerformed
        // TODO add your handling code here:
        saveCustomer();

    }//GEN-LAST:event_create_accountActionPerformed

    private void social_economic_classActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_social_economic_classActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_social_economic_classActionPerformed

    private void next_of_kin_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_of_kin_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_next_of_kin_nameActionPerformed

    private void comm_address_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comm_address_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comm_address_2ActionPerformed

    private void work_telephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_telephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_work_telephoneActionPerformed

    private void employee_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employee_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employee_idActionPerformed

    private void interest_rate_creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interest_rate_creditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interest_rate_creditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField account_mandate_id_number;
    private javax.swing.JComboBox<String> account_mandate_id_type;
    private javax.swing.JTextField account_mandate_name;
    private javax.swing.JFormattedTextField account_number;
    private javax.swing.JComboBox<String> account_ownership;
    private javax.swing.JComboBox<String> account_status;
    private com.toedter.calendar.JDateChooser account_status_date;
    private javax.swing.JComboBox<String> account_type;
    private javax.swing.JComboBox<String> card_subscription;
    private javax.swing.JTextField comm_address_1;
    private javax.swing.JTextField comm_address_2;
    private javax.swing.JComboBox<String> comm_country;
    private javax.swing.JComboBox<String> comm_residence_type;
    private javax.swing.JComboBox<String> comm_village;
    private javax.swing.JButton create_account;
    private javax.swing.JComboBox<String> credit_category;
    private javax.swing.JTextField customer_acronym;
    private javax.swing.JComboBox<String> customer_gender;
    private javax.swing.JFormattedTextField customer_id;
    private javax.swing.JTextField customer_name;
    private com.toedter.calendar.JDateChooser customer_open_date;
    private javax.swing.JComboBox<String> customer_status;
    private javax.swing.JTextField customer_tin;
    private com.toedter.calendar.JDateChooser date_of_birth;
    private javax.swing.JComboBox<String> economic_sub_sector;
    private javax.swing.JComboBox<String> economic_sub_sector_isic;
    private javax.swing.JComboBox<String> education;
    private javax.swing.JTextField email;
    private javax.swing.JTextField emp_address_1;
    private javax.swing.JTextField emp_address_2;
    private javax.swing.JComboBox<String> emp_country;
    private javax.swing.JComboBox<String> emp_village;
    private javax.swing.JTextField employee_id;
    private javax.swing.JTextField employer_name;
    private javax.swing.JTextField fax_number_1;
    private javax.swing.JTextField fax_number_2;
    private javax.swing.JTextField forename_1;
    private javax.swing.JTextField forename_2;
    private javax.swing.JComboBox<String> freeze_status;
    private javax.swing.JTextField group_name;
    private javax.swing.JTextField group_number;
    private javax.swing.JTextField health_insurance_number;
    private javax.swing.JTextField home_telephone;
    private javax.swing.JComboBox<String> income;
    private javax.swing.JComboBox<String> income_frequency;
    private javax.swing.JComboBox<String> institutional_sector_code;
    private javax.swing.JTextField interest_rate_credit;
    private javax.swing.JTextField interest_rate_debit;
    private javax.swing.JComboBox<String> internet_banking_subscription;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField joint_participation_count;
    private javax.swing.JComboBox<String> legal_status;
    private javax.swing.JComboBox<String> local_govt_member;
    private javax.swing.JComboBox<String> marital_status;
    private javax.swing.JComboBox<String> mobile_banking_subscription;
    private javax.swing.JComboBox<String> naics_code;
    private javax.swing.JTextField national_id_number;
    private javax.swing.JComboBox<String> national_id_type;
    private javax.swing.JComboBox<String> nationality;
    private javax.swing.JTextField next_of_kin_email;
    private javax.swing.JTextField next_of_kin_id_no;
    private javax.swing.JComboBox<String> next_of_kin_id_type;
    private javax.swing.JTextField next_of_kin_name;
    private javax.swing.JTextField next_of_kin_telephone;
    private javax.swing.JTextField number_of_dependants;
    private javax.swing.JComboBox<String> occupation;
    private javax.swing.JComboBox<String> performance_class;
    private javax.swing.JTextField perm_address_1;
    private javax.swing.JTextField perm_address_2;
    private javax.swing.JComboBox<String> perm_village;
    private javax.swing.JComboBox<String> permanent_country;
    private javax.swing.JTextField place_of_birth;
    private javax.swing.JComboBox<String> public_sector_code;
    private javax.swing.JComboBox<String> related_party;
    private javax.swing.JTextField related_party_name;
    private javax.swing.JComboBox<String> relationship_type;
    private javax.swing.JComboBox<String> residence;
    private javax.swing.JComboBox<String> salutation;
    private javax.swing.JComboBox<String> social_economic_class;
    private javax.swing.JTextField spouse_name;
    private javax.swing.JTextField ssn_number;
    private javax.swing.JTextField surname;
    private javax.swing.JTextField vision_ouc;
    private javax.swing.JComboBox<String> vision_sbu;
    private javax.swing.JTextField work_telephone;
    // End of variables declaration//GEN-END:variables

    private void addAllHashMaps() {
        villages = helper.getVillageCodes();
        economicsubsectorISICCodes = helper.getEconomicSubSectorISICCodes();
        naicsCodes = helper.getNaicsCodes();
        occupationCodes = helper.getOccupationCodes();
        incomeRangesCodes = helper.getIncomeRangeCodes();
        customerStatusCodes = helper.getCustomerStatusCodes();
        legalStatusCodes = helper.getLegalStatusCodes();
        incomeFrequencyCodes = helper.getIncomeFrequencyCodes();
        relationshipTypeCodes = helper.getRelationshipTypeCodes();
        educationCodes = helper.getEducationCodes();
        residenceTypeCodes = helper.getResidenceTypeCodes();
        nationalIdTypeCodes = helper.getNationalIdTypeCodes();
        maritalStatusCodes = helper.getMaritalStatusCodes();
        genderCodes = helper.getGenderCodes();
        visionSBUCodes = helper.getVisionSBUCodes();
        accountStatusCodes = helper.getAccountStatusCodes();
        accountTypeCodes = helper.getAccountTypeCodes();
        freezeStatusCodes = helper.getFreezeStatusCodes();
        publicSectorCodes = helper.getPublicSectorCodes();
        institutionalSectorCodes = helper.getInstitutionalSectorCodes();
        accountOwnerShipCodes = helper.getAccountOwnershipCodes();
        performanceClassCodes = helper.getPerformanceClassCodes();
        creditCategoryCodes = helper.getCreditCategoryCodes();
        economicSectorCodes = helper.getEconomicSectorCodes();
    }
}
