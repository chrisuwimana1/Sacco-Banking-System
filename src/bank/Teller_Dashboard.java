package bank;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author chris
 */
import com.placeholder.PlaceHolder;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import java.util.Map;
import java.util.HashMap;

public class Teller_Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Teller_Dashboard
     */
    PlaceHolder holder;
    PleaseWait pl = new PleaseWait();
    Preferences prefs = Preferences.userNodeForPackage(Teller_Dashboard.class);
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBConnection conn;
    Helper helper;
    boolean doesCustomerHasEpargneObligatoire = false;

    HashMap<String, String> villages;
    HashMap<String, String> economicsubsectorISICCodes;
    HashMap<String, Integer> naicsCodes;
    HashMap<String, Integer> occupationCodes;
    HashMap<String, Integer> incomeRangesCodes;
    HashMap<String, Integer> customerStatusCodes;
    HashMap<String, Integer> legalStatusCodes;
    HashMap<String, String> incomeFrequencyCodes;
    HashMap<String, Integer> relationshipTypeCodes;
    Map<String, Integer> educationCodes;
    HashMap<String, String> residenceTypeCodes;
    HashMap<String, Integer> nationalIdTypeCodes;
    HashMap<String, String> maritalStatusCodes;
    HashMap<String, String> genderCodes;
    HashMap<String, String> visionSBUCodes;
    HashMap<String, Integer> accountStatusCodes;
    HashMap<String, String> accountTypeCodes;
    HashMap<String, String> freezeStatusCodes;
    HashMap<String, String> publicSectorCodes;
    HashMap<String, String> institutionalSectorCodes;
    HashMap<String, String> accountOwnerShipCodes;
    HashMap<String, String> performanceClassCodes;
    HashMap<String, Integer> creditCategoryCodes;
    HashMap<String, String> economicSectorCodes;

    public Teller_Dashboard() {
        this.setVisible(true);
        initComponents();
        helper = new Helper();
        addAllHashMaps();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);

        try {
            conn = new DBConnection();
        } catch (BackingStoreException ex) {
            Logger.getLogger(Teller_Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }

        myinfo.setText(prefs.get("title", "") + ": " + prefs.get("firstname", "") + " " + prefs.get("lastname", "").charAt(0) + ".");
        saveupdate.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        new_account = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        new_deposit = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        new_withdrawal = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        myinfo = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        exit = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        search_field_choice = new javax.swing.JComboBox<>();
        search_field = new javax.swing.JTextField();
        search_account = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        account_number = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        number_of_dependants = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        spouse_name = new javax.swing.JTextField();
        next_of_kin_name = new javax.swing.JTextField();
        next_of_kin_id_no = new javax.swing.JTextField();
        next_of_kin_telephone = new javax.swing.JTextField();
        next_of_kin_email = new javax.swing.JTextField();
        next_of_kin_id_type = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        occupation = new javax.swing.JComboBox<>();
        jLabel73 = new javax.swing.JLabel();
        emp_address_1 = new javax.swing.JTextField();
        emp_address_2 = new javax.swing.JTextField();
        employee_id = new javax.swing.JTextField();
        employer_name = new javax.swing.JTextField();
        ssn_number = new javax.swing.JTextField();
        emp_country = new javax.swing.JComboBox<>();
        emp_village = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        comm_residence_type = new javax.swing.JComboBox<>();
        perm_address_1 = new javax.swing.JTextField();
        perm_address_2 = new javax.swing.JTextField();
        permanent_country = new javax.swing.JComboBox<>();
        comm_country = new javax.swing.JComboBox<>();
        residence = new javax.swing.JComboBox<>();
        comm_address_1 = new javax.swing.JTextField();
        comm_address_2 = new javax.swing.JTextField();
        perm_village = new javax.swing.JComboBox<>();
        comm_village = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        account_mandate_id_type = new javax.swing.JComboBox<>();
        account_mandate_name = new javax.swing.JTextField();
        account_mandate_id_number = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        account_ownership = new javax.swing.JComboBox<>();
        joint_participation_count = new javax.swing.JTextField();
        credit_category = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        account_status = new javax.swing.JComboBox<>();
        freeze_status = new javax.swing.JComboBox<>();
        performance_class = new javax.swing.JComboBox<>();
        institutional_sector_code = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        account_type = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        card_subscription = new javax.swing.JComboBox<>();
        interest_rate_credit = new javax.swing.JTextField();
        interest_rate_debit = new javax.swing.JTextField();
        account_status_date = new com.toedter.calendar.JDateChooser();
        public_sector_code = new javax.swing.JComboBox<>();
        economic_sub_sector = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        home_telephone = new javax.swing.JTextField();
        work_telephone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        fax_number_1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        fax_number_2 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        customer_status = new javax.swing.JComboBox<>();
        jLabel76 = new javax.swing.JLabel();
        related_party_name = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        naics_code = new javax.swing.JComboBox<>();
        jLabel78 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        internet_banking_subscription = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        related_party = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        economic_sub_sector_isic = new javax.swing.JComboBox<>();
        education = new javax.swing.JComboBox<>();
        mobile_banking_subscription = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        relationship_type = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        legal_status = new javax.swing.JComboBox<>();
        group_number = new javax.swing.JTextField();
        group_name = new javax.swing.JTextField();
        income_frequency = new javax.swing.JComboBox<>();
        income = new javax.swing.JComboBox<>();
        health_insurance_number = new javax.swing.JTextField();
        local_govt_member = new javax.swing.JComboBox<>();
        jLabel84 = new javax.swing.JLabel();
        customer_tin = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        marital_status = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        customer_open_date = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        forename_1 = new javax.swing.JTextField();
        customer_name = new javax.swing.JTextField();
        customer_gender = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        place_of_birth = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        surname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        date_of_birth = new com.toedter.calendar.JDateChooser();
        national_id_type = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        vision_sbu = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        social_economic_class = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        vision_ouc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        salutation = new javax.swing.JComboBox<>();
        nationality = new javax.swing.JComboBox<>();
        national_id_number = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        customer_acronym = new javax.swing.JTextField();
        forename_2 = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        customer_id = new javax.swing.JFormattedTextField();
        saveupdate = new javax.swing.JButton();
        view_balance = new javax.swing.JButton();
        view_transactions = new javax.swing.JButton();
        view_part_social = new javax.swing.JButton();
        epargne_obligatoire = new javax.swing.JButton();
        new_savings = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        new_term_deposit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jToolBar1.setRollover(true);

        new_account.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        new_account.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/add-icon.png"))); // NOI18N
        new_account.setText("NEW ACCOUNT");
        new_account.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                new_accountMouseClicked(evt);
            }
        });
        jToolBar1.add(new_account);
        jToolBar1.add(jSeparator1);

        new_deposit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        new_deposit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/wizard-icon.png"))); // NOI18N
        new_deposit.setText("DEPOSIT");
        new_deposit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                new_depositMouseClicked(evt);
            }
        });
        jToolBar1.add(new_deposit);
        jToolBar1.add(jSeparator2);

        new_withdrawal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        new_withdrawal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/web-icon.png"))); // NOI18N
        new_withdrawal.setText("WITHDRAW");
        new_withdrawal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                new_withdrawalMouseClicked(evt);
            }
        });
        jToolBar1.add(new_withdrawal);
        jToolBar1.add(jSeparator3);

        myinfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        myinfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/user-icon.png"))); // NOI18N
        jToolBar1.add(myinfo);
        jToolBar1.add(jSeparator4);

        exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/stop-icon.png"))); // NOI18N
        exit.setText("EXIT");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        jToolBar1.add(exit);

        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Search Account"));

        search_field_choice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Account Number", "Last Name" }));

        search_field.setText("310-0001-10");

        search_account.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/search-icon.png"))); // NOI18N
        search_account.setText("Search");
        search_account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_accountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(search_field, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search_account, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_field_choice, 0, 148, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search_field_choice)
                    .addComponent(search_field, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(search_account, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account Details"));

        account_number.setEnabled(false);

        jLabel80.setText("Account Number:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel80)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(account_number, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(account_number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/cancel-icon.png"))); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/edit-icon.png"))); // NOI18N
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Spouse Info"));

        number_of_dependants.setText("0");
        number_of_dependants.setEnabled(false);

        jLabel50.setText("Name of Next Kin: ");

        jLabel22.setText("Number Of Dependants (*):");

        jLabel54.setText("Next Of Kin Telephone:");

        jLabel52.setText("Next Of Kin ID Number:");

        jLabel53.setText("Next Of Kin Email:");

        jLabel51.setText("Next Of Kin ID Type:");

        jLabel49.setText("Spouse Name:");

        spouse_name.setEnabled(false);

        next_of_kin_name.setEnabled(false);
        next_of_kin_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_of_kin_nameActionPerformed(evt);
            }
        });

        next_of_kin_id_no.setEnabled(false);

        next_of_kin_telephone.setEnabled(false);

        next_of_kin_email.setEnabled(false);

        next_of_kin_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID Type", "Driving_License", "National_ID  (Mandatory for Rwandan Nationals)", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));
        next_of_kin_id_type.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52)
                    .addComponent(jLabel54)
                    .addComponent(jLabel53))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(number_of_dependants, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next_of_kin_email, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(next_of_kin_telephone)
                    .addComponent(next_of_kin_id_no)
                    .addComponent(next_of_kin_name)
                    .addComponent(spouse_name)
                    .addComponent(next_of_kin_id_type, 0, 1, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(spouse_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(next_of_kin_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(next_of_kin_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(next_of_kin_id_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(next_of_kin_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(next_of_kin_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(number_of_dependants, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Employment Info"));

        jLabel72.setText("Employer Village:");

        jLabel69.setText("Employee ID:");

        jLabel21.setText("Occupation (*):");

        jLabel74.setText("SSN Number:");

        jLabel70.setText("Employer Address 1:");

        jLabel71.setText("Employer Address 2:");

        jLabel68.setText("Employer Name:");

        occupation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Occupation", "Commissioned armed forces officers", "Non-commissioned armed forces officers", "Armed forces occupations, other ranks", "Managing directors and chief executives", "Finance managers", "Agricultural and forestry production managers", "Financial and insurance services branch managers", "Hotel managers", "Restaurant managers", "Civil engineers", "Environmental engineers", "Mechanical engineers", "Electronics engineers", "Generalist medical practitioners ", "Specialist medical practitioners ", "Nursing professionals", "Traditional and complementary medicine professionals", "Veterinarians", "Pharmacists", "University and higher education teachers", "Secondary education teachers", "Primary school teachers", "Accountants", "Lawyers", "Judges", "Religious professionals", "Journalists", "Musicians, singers and composers", "Religious associate professionals", "Sports and fitness workers", "Athletes and sports players", "Sports coaches, instructors and officials", "Photographers", "Secretaries", "Bank tellers and related clerks", "Receptionists", "Cooks", "Waiters", "Bartenders", "Hairdressers", "Shop keepers", "Cashiers and ticket clerks", "Police officers", "Prison guards", "Security guards", "Field crop and vegetable growers", "Livestock and dairy producers", "Poultry producers", "House builders", "Potters and related workers", "Handicraft workers in wood, basketry and related materials", "Handicraft workers in textile, leather and related materials", "Building and related electricians", "Tailors, dressmakers, furriers and hatters", "Shoemakers and related workers", "Motorcycle drivers", "Car, taxi and van drivers", "Bus and tram drivers", "Heavy truck and lorry drivers", "Domestic cleaners and helpers", "Cleaners and helpers in offices, hotels and other establishments", "Crop farm labourers", "Livestock farm labourers", "Garbage and recycling collectors", "Not Applicable", "Others in General", "Unemployed" }));
        occupation.setEnabled(false);

        jLabel73.setText("Employer Country:");

        emp_address_1.setEnabled(false);

        emp_address_2.setEnabled(false);

        employee_id.setEnabled(false);
        employee_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employee_idActionPerformed(evt);
            }
        });

        employer_name.setEnabled(false);

        ssn_number.setEnabled(false);

        emp_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));
        emp_country.setEnabled(false);

        emp_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Village" }));
        emp_village.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addGap(29, 29, 29)
                        .addComponent(employer_name))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel69)
                        .addGap(48, 48, 48)
                        .addComponent(employee_id))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(34, 34, 34)
                        .addComponent(occupation, 0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel73)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addGap(46, 46, 46)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ssn_number)
                            .addComponent(emp_country, 0, 273, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emp_address_1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel71)
                            .addComponent(jLabel72))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emp_address_2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(emp_village, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(employer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(emp_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(emp_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(emp_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(emp_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(ssn_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Address"));
        jPanel6.setEnabled(false);

        jLabel65.setText("Permanent Country (*):");

        jLabel59.setText("Communication Village:");

        jLabel63.setText("Permanent Address 2:");

        jLabel60.setText("Communication Country (*):");

        jLabel64.setText("Permanent Village:");

        jLabel58.setText("Communication Address 2:");

        jLabel61.setText("Communication Residence Type (*):");

        jLabel62.setText("Permanent Address 1 (*):");

        jLabel56.setText("Residence (*):");

        jLabel57.setText("Communication Address 1 (*):");

        comm_residence_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Residence Type", "Owner", "Tenant" }));
        comm_residence_type.setEnabled(false);

        perm_address_1.setEnabled(false);

        perm_address_2.setEnabled(false);

        permanent_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));
        permanent_country.setEnabled(false);

        comm_country.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));
        comm_country.setEnabled(false);

        residence.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));
        residence.setEnabled(false);

        comm_address_1.setEnabled(false);

        comm_address_2.setEnabled(false);
        comm_address_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comm_address_2ActionPerformed(evt);
            }
        });

        perm_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Village" }));
        perm_village.setEnabled(false);

        comm_village.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Village" }));
        comm_village.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61)
                    .addComponent(jLabel62)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel60)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comm_residence_type, 0, 222, Short.MAX_VALUE)
                    .addComponent(comm_address_1)
                    .addComponent(comm_address_2)
                    .addComponent(comm_country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(perm_address_1)
                    .addComponent(perm_address_2)
                    .addComponent(permanent_country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(residence, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(perm_village, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comm_village, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(residence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(comm_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(comm_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(comm_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel60)
                    .addComponent(comm_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(comm_residence_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(perm_address_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(perm_address_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(perm_village, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(permanent_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account Mandate Info"));

        jLabel48.setText("Account Mandate ID No:");

        jLabel47.setText("Account Mandate ID Type:");

        jLabel3.setText("Account Mandate Name:");

        account_mandate_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID Type", "Driving_License", "National_ID  (Mandatory for Rwandan Nationals)", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));
        account_mandate_id_type.setEnabled(false);

        account_mandate_name.setEnabled(false);

        account_mandate_id_number.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(18, 18, 18)
                        .addComponent(account_mandate_id_number))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(account_mandate_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(account_mandate_name)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(account_mandate_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(account_mandate_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(account_mandate_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Account Information"));

        jLabel37.setText("Interest rate/Debits (*):");

        account_ownership.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ownership", "Individual or Corporate", "Joint Application", "Sole proprietorship in which the owner is account owner", "By one of the partners", "Group Owners" }));
        account_ownership.setEnabled(false);

        joint_participation_count.setText("0");
        joint_participation_count.setEnabled(false);

        credit_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Cash Adavance", "Working Capital Credit", "Inventory Credit", "Discount Facility", "Bridging Credit", "Season Credit", "Personal Loan", "Vehicle Loan", "Residential Mortgage Loans", "Commercial Mortgages/Real Estate Leasing", "Leasing", "Fixed-Asset Loan", "Equipment Loans", "Other cash loans", "Undrawn line of credit", "Documentary Credit", "Caution", "Guarantee", "Acceptance", "Other Commitments" }));
        credit_category.setEnabled(false);

        jLabel41.setText("Joint Participant Count (*):");

        account_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", "Closed", "Dormant", "Expired", "Matured", "Deleted" }));
        account_status.setEnabled(false);

        freeze_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Freeze", "Debit Freeze", "Credit Freeze", "Debit/Credit Freeze", " " }));
        freeze_status.setEnabled(false);

        performance_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Class", "Normal loans", "Watch loans", "Substandards loans", "Doubtful loans", "Loss loans", "Writtern Off" }));
        performance_class.setEnabled(false);

        institutional_sector_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Sector", "MFI/SACCO (Deposit Taking)", "Micro Finance Bank", "Investment Banks", "Development Bank", "Cooperative Bank", "Housing Bank & Assimilated" }));
        institutional_sector_code.setEnabled(false);

        jLabel32.setText("Account Type (*): ");

        jLabel35.setText("Credit Category (*):");

        jLabel42.setText("Card Subscription (*):");

        jLabel43.setText("Economic Sub Sector (*):");

        jLabel39.setText("Public Sector Code (*):");

        jLabel34.setText("Performance Class (*):");

        jLabel44.setText("Account Status (*):");

        jLabel33.setText("Freeze Status (*):");

        account_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Current Account", "Saving Account", "Term Deposit Account", "Security Deposit Account", "Loan Account", "Office Account/ Internal Account/ Accounts owned by the stakeholder itself", "Insurance Policy", "Trust Account" }));
        account_type.setEnabled(false);

        jLabel36.setText("Institutional Sector Code (*):");

        jLabel38.setText("Interest rate/Credits (*):");

        jLabel40.setText("Account Ownership (*):");

        card_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "A", "B" }));
        card_subscription.setEnabled(false);

        interest_rate_credit.setText("24");
        interest_rate_credit.setEnabled(false);
        interest_rate_credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interest_rate_creditActionPerformed(evt);
            }
        });

        interest_rate_debit.setText("0");
        interest_rate_debit.setEnabled(false);

        account_status_date.setEnabled(false);

        public_sector_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Others", "Treasury", "Ministries", "Government Projects", "Joint Projects", "Special Funds", "Counterpart Funds", "Offices ", "Hospital And Community Health Center ", "Institutes And Research Centers ", "Province", "Districts", "Sectors", "RSSB", "MMI", "Related Public Companies ", "Public Companies", "Other Sectors" }));
        public_sector_code.setEnabled(false);

        economic_sub_sector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Sub Sector Code", "0001", "1111", "1112", "1113", "1119", "1190", "1200", "1300", "1400", "1900", "2000", "3110", "3120", "3190", "3210", "3220", "3310", "3320", "3400", "3500", "3610", "3620", "3630", "3640", "3690", "3710", "3720", "3800", "3900", "4100", "4200", "4900", "5100", "5210", "5290", "6111", "6112", "6113", "6121", "6122", "6123", "6129", "6131", "6132", "6133", "6139", "6190", "6200", "6310", "6320", "6330", "6340", "6350", "6360", "6390", "6400", "6900", "7100", "7200", "7300", "7400", "7500", "7600", "7700", "7900", "8100", "8200", "8300", "8400", "8900", "9100", "9200", "9300", "9400", "9500", "9900" }));
        economic_sub_sector.setEnabled(false);

        jLabel45.setText("Account Status Date (*):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel34)
                    .addComponent(jLabel38)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(credit_category, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(institutional_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(performance_class, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(freeze_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(account_type, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(public_sector_code, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(account_ownership, 0, 1, Short.MAX_VALUE)
                            .addComponent(interest_rate_credit)
                            .addComponent(interest_rate_debit)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(card_subscription, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(economic_sub_sector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joint_participation_count, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel45)
                    .addComponent(jLabel44)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(account_status_date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(account_status, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(account_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(account_status_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(account_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(freeze_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(performance_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(credit_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(institutional_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(interest_rate_debit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(interest_rate_credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(public_sector_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(account_ownership, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(joint_participation_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(card_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(economic_sub_sector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Contact Info"));

        jLabel20.setText("Work Phone (*):");

        home_telephone.setEnabled(false);

        work_telephone.setEnabled(false);
        work_telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work_telephoneActionPerformed(evt);
            }
        });

        email.setEnabled(false);

        jLabel66.setText("Fax Number 1:");

        jLabel67.setText("Fax Number 2:");

        jLabel19.setText("Home Phone (*):");

        fax_number_1.setEnabled(false);

        jLabel18.setText("Email (*):");

        fax_number_2.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel19)
                                .addComponent(jLabel20))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(work_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(home_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addGap(119, 119, 119)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fax_number_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fax_number_2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel66)
                    .addComponent(jLabel67))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(home_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(work_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(fax_number_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(fax_number_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Miscelaneous Info"));

        customer_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", "Delete" }));
        customer_status.setEnabled(false);
        customer_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_statusActionPerformed(evt);
            }
        });

        jLabel76.setText("Income Frequency:");

        related_party_name.setEnabled(false);

        jLabel75.setText("Income:");

        jLabel25.setText("Customer/Bank Relation (*):");

        naics_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default NAICS Code" }));
        naics_code.setEnabled(false);

        jLabel78.setText("Local Government Member:");

        jLabel30.setText("Customer Status (*):");

        jLabel26.setText("Relationship Type (*):");

        internet_banking_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));
        internet_banking_subscription.setEnabled(false);

        jLabel27.setText("Education (*):");

        jLabel55.setText("Group Number:");

        related_party.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NON", "DIR", "MGT", "PRN", "STAFF", "OTH1", "OTH2", "OTH3" }));
        related_party.setEnabled(false);

        jLabel24.setText("NAICS Code (*):");

        jLabel79.setText("Health Insurance Number:");

        jLabel29.setText("Mobile Banking Subscription (*): ");

        economic_sub_sector_isic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Other personal service activities n.e.c.", "Growing of rice", "Growing of vegetables and melons, roots and tubers", "Raising of cattle and buffaloes", "Raising of sheep and goats", "Raising of swine/pigs", "Raising of poultry", "Mixed farming\"", "Manufacture of dairy products", "Manufacture of other food products n.e.c.", "Weaving of textiles", "Repair of machinery", "Electrical installation", "Wholesale of food, beverages and tobacco", "Wholesale of textiles, clothing and footwear", "Wholesale of other household goods", "Wholesale of other machinery and equipment", "Restaurants and mobile food service activities", "Beverage serving activities", "Higher education", "Sports and recreation education", "Cultural education", "Other education n.e.c.", "Hospital activities", "Activities of religious organizations" }));
        economic_sub_sector_isic.setEnabled(false);

        education.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Highest Education", "PHD", "Masters", "Bachelors Degree", "Diploma (A2 or A1 level)", "School attendace below A2 level", "High School", "Primary School", "Below Primary" }));
        education.setEnabled(false);

        mobile_banking_subscription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));
        mobile_banking_subscription.setEnabled(false);

        jLabel23.setText("Economic Sub Sector ISIC(*):");

        jLabel77.setText("Group Name:");

        jLabel46.setText("Internet Banking Subscription (*): ");

        relationship_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non Related Party", "Spouse", "Husband", "Wife", "Father", "Mother", "Son", "Daughter", "Brother", "Sister", "Grandfather", "Grandmother", "Grandson", "Granddaughter", "Uncle", "Aunt", "Cousin", "Nephew", "Niece", "Father-in-law", "Mother-in-law", "Brother-in-law", "Sister-in-law", "Self", "Direct or indirect relationship with the bank" }));
        relationship_type.setEnabled(false);

        jLabel31.setText("Related Party Name:");

        jLabel83.setText("Legal Status (*):");

        legal_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Legal Status", "Sole Trader", "Partnership", "Private Company", "Public Company", "Trustee", "Co operatives", "Non-Profit Organization", " " }));
        legal_status.setEnabled(false);

        group_number.setEnabled(false);

        group_name.setEnabled(false);

        income_frequency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Income Frequency", "Monthly", "Quarterly", "Annual", "Daily", "Weekly", "Not Applicable" }));
        income_frequency.setEnabled(false);

        income.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Income Range", "0 -30,000", "30,001 - 100,000", "101,000 - 170,000", "171,000 - 230,000", "231,000 - 300,000", "301,000 - 370,000", "371,000 - 440,000", "441,000 - 510,000", "511,000 - 580,000", "581,000 - 650,000", "651,000 - 720,000", "721,000 - 790,000", "791,000 - 860,000", "861,000 - 930,000", "931,000 - 1,000,000", "1,001,000 - 1,070,000", "1,071,000 - 1,140,000", "1,141,000 - 1,210,000", "1,211,000 - 1,280,000", "1,281,000 - 1,350,000", "1,351,000 - 1,420,000", "1,421,000 - 1,490,000", "1,491,000 - 1,560,000", "1,561,000 - 1,630,000", "1,631,000 - 1,700,000", "1,701,000 - 1,770,000", "1,771,000 - 1,840,000", "1,841,000 - 1,910,000", "1,911,000 - 1,980,000", "1,981,000  and  above" }));
        income.setEnabled(false);

        health_insurance_number.setEnabled(false);
        health_insurance_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                health_insurance_numberActionPerformed(evt);
            }
        });

        local_govt_member.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "Y" }));
        local_govt_member.setEnabled(false);

        jLabel84.setText("Customer TIN:");

        customer_tin.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(jLabel78)
                            .addComponent(jLabel79)
                            .addComponent(jLabel84))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(mobile_banking_subscription, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(internet_banking_subscription, 0, 250, Short.MAX_VALUE)
                                        .addComponent(customer_tin))
                                    .addComponent(local_govt_member, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(health_insurance_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel29)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel31))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(relationship_type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(related_party_name, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel27)
                            .addComponent(jLabel25))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(related_party, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(economic_sub_sector_isic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(naics_code, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(education, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel55)
                            .addComponent(jLabel77)
                            .addComponent(jLabel76)
                            .addComponent(jLabel75)
                            .addComponent(jLabel83))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(legal_status, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(group_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(group_name, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(income_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(economic_sub_sector_isic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(naics_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(related_party, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(relationship_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(related_party_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(education, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(internet_banking_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(mobile_banking_subscription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(local_govt_member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(customer_tin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(health_insurance_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(income_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(group_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(group_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(legal_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Basic Info"));

        marital_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Marital Status", "Married", "Widowed", "Separated", "Divorced", "Single", "Not Applicable (For Corporates)" }));
        marital_status.setEnabled(false);

        jLabel10.setText("Marital Status (*):");

        jLabel4.setText("Customer Name (*):");

        customer_open_date.setEnabled(false);

        jLabel28.setText("Sacco Branch ID (*):");

        jLabel12.setText("National ID No (*):");

        jLabel15.setText("Business Segment (*):");

        jLabel13.setText("Opening Date (*):");

        jLabel1.setText("Middle Name:");

        jLabel17.setText("Social Economic Class:");

        jLabel2.setText("Short Name/Acronym (*):");

        forename_1.setEnabled(false);

        customer_name.setEnabled(false);

        customer_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", "Corporate" }));
        customer_gender.setEnabled(false);

        jLabel16.setText("Nationality (*):");

        place_of_birth.setEnabled(false);

        jLabel14.setText("Gender (*):");

        surname.setEnabled(false);

        jLabel5.setText("Last Name (*):");

        date_of_birth.setEnabled(false);

        national_id_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID Type", "Driving_License", "National_ID  (Mandatory for Rwandan Nationals)", "Refugee ID", "Passport", "Foreigner's ID", "Registration Number (For companies only)", "Other Gov Institutions(BNR,RDB,etc.)" }));
        national_id_type.setEnabled(false);

        jLabel11.setText("National ID Type (*):");

        vision_sbu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Business Segment", "Micro Enterprises", "Small Enterprises", "Medium Enterprises", "Large Enterprises", "Retail or Individuals", "NGOs, charity/welfare organisations", "Business Groups/Community", "Others" }));
        vision_sbu.setEnabled(false);

        jLabel9.setText("Place of Birth (*):");

        social_economic_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Social Economic Class", "1", "2", "3", "4", "9999" }));
        social_economic_class.setEnabled(false);
        social_economic_class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                social_economic_classActionPerformed(evt);
            }
        });

        jLabel6.setText("Salutation(*):");

        vision_ouc.setText("001");
        vision_ouc.setEnabled(false);

        jLabel7.setText("Date Of Birth (*):");

        salutation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Salutation", "MISS", "MR", "MRS", "MS", "CORP", "J" }));
        salutation.setEnabled(false);

        nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RW", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "FI", "FJ", "FK", "FM", "FO", "FR", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SY", "SZ", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "ZA", "ZM", "ZW", "XK" }));
        nationality.setEnabled(false);

        national_id_number.setEnabled(false);

        jLabel8.setText("First Name (*):");

        customer_acronym.setEnabled(false);

        forename_2.setEnabled(false);

        jLabel81.setText("Customer ID (*):");

        customer_id.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel28)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(place_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(marital_status, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(national_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(social_economic_class, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vision_sbu, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vision_ouc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_open_date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(national_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel81))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(salutation, 0, 250, Short.MAX_VALUE)
                            .addComponent(customer_name)
                            .addComponent(forename_1)
                            .addComponent(forename_2)
                            .addComponent(surname)
                            .addComponent(customer_acronym)
                            .addComponent(customer_id))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(salutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81)
                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forename_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(forename_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(customer_acronym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(date_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(place_of_birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(customer_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(marital_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(national_id_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(national_id_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(customer_open_date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(vision_ouc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(vision_sbu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(social_economic_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel11);

        saveupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/save-icon.png"))); // NOI18N
        saveupdate.setText("SAVE");
        saveupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveupdateActionPerformed(evt);
            }
        });

        view_balance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_balance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/balance.png"))); // NOI18N
        view_balance.setText("Current Balance");
        view_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_balanceActionPerformed(evt);
            }
        });

        view_transactions.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_transactions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/transaction.png"))); // NOI18N
        view_transactions.setText("Transactions");
        view_transactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_transactionsActionPerformed(evt);
            }
        });

        view_part_social.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_part_social.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/Money-icon.png"))); // NOI18N
        view_part_social.setText("Part Social");
        view_part_social.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_part_socialActionPerformed(evt);
            }
        });

        epargne_obligatoire.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        epargne_obligatoire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/savings-icon.png"))); // NOI18N
        epargne_obligatoire.setText("Epargne Obligatoire");
        epargne_obligatoire.setEnabled(false);
        epargne_obligatoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epargne_obligatoireActionPerformed(evt);
            }
        });

        new_savings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/savings.png"))); // NOI18N
        new_savings.setText("NEW SAVINGS");
        new_savings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_savingsActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/transfer-icon.png"))); // NOI18N
        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        new_term_deposit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/savings.png"))); // NOI18N
        new_term_deposit.setText("NEW TERM DEPOSIT");
        new_term_deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_term_depositActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(edit)
                        .addGap(29, 29, 29)
                        .addComponent(saveupdate)
                        .addGap(33, 33, 33)
                        .addComponent(delete))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(new_savings)
                        .addGap(18, 18, 18)
                        .addComponent(new_term_deposit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(view_balance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(view_transactions)
                        .addGap(34, 34, 34)
                        .addComponent(epargne_obligatoire))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(48, 48, 48)
                        .addComponent(view_part_social))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edit)
                            .addComponent(saveupdate)
                            .addComponent(delete))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(new_savings)
                            .addComponent(new_term_deposit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(view_part_social, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(view_balance)
                    .addComponent(view_transactions)
                    .addComponent(epargne_obligatoire, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static <K, V> K getKey(Map<K, V> map, V value) {
        for (Map.Entry<K, V> entry : map.entrySet()) {
            if (value.equals(entry.getValue())) {
                return entry.getKey();
            }
        }
        return null;
    }

    public static Object getKeyFromValue(Map hm, Object value) {
        for (Object o : hm.keySet()) {
            if (hm.get(o).equals(value)) {
                return o;
            }
        }
        return null;
    }
    
    private void addAllHashMaps() {
        //Get all the HashMaps 
        villages = helper.getVillageCodes();
        economicsubsectorISICCodes = helper.getEconomicSubSectorISICCodes();
        naicsCodes = helper.getNaicsCodes();
        occupationCodes = helper.getOccupationCodes();
        incomeRangesCodes = helper.getIncomeRangeCodes();
        customerStatusCodes = helper.getCustomerStatusCodes();
        legalStatusCodes = helper.getLegalStatusCodes();
        incomeFrequencyCodes = helper.getIncomeFrequencyCodes();
        relationshipTypeCodes = helper.getRelationshipTypeCodes();
        educationCodes = helper.getEducationCodes();
        residenceTypeCodes = helper.getResidenceTypeCodes();
        nationalIdTypeCodes = helper.getNationalIdTypeCodes();
        maritalStatusCodes = helper.getMaritalStatusCodes();
        genderCodes = helper.getGenderCodes();
        visionSBUCodes = helper.getVisionSBUCodes();
        accountStatusCodes = helper.getAccountStatusCodes();
        accountTypeCodes = helper.getAccountTypeCodes();
        freezeStatusCodes = helper.getFreezeStatusCodes();
        publicSectorCodes = helper.getPublicSectorCodes();
        institutionalSectorCodes = helper.getInstitutionalSectorCodes();
        accountOwnerShipCodes = helper.getAccountOwnershipCodes();
        performanceClassCodes = helper.getPerformanceClassCodes();
        creditCategoryCodes = helper.getCreditCategoryCodes();
        economicSectorCodes = helper.getEconomicSectorCodes();
    }

    private void doesEpargneObligatoireExist(String accountNumber) {

        //getEpargneObligatoire(accountNumber);
        //boolean status = false;
        if (!accountNumber.isEmpty()) {
            try {
                String sql = "SELECT Account_Number, Amount from epargne_obligatoire where Account_Number = ?";
                pst = conn.connection.prepareStatement(sql);
                pst.setString(1, accountNumber);
                rs = pst.executeQuery();
                if (rs.next()) {
                    doesCustomerHasEpargneObligatoire = true;
                    epargne_obligatoire.setEnabled(true);
                } else {
                    epargne_obligatoire.setEnabled(false);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        //return status;
    }

    private void searchAccount(String searchAccountField, String searchAccountFieldChoice) {

        if (searchAccountFieldChoice.equals("Account Number")) {

            try {
                String sql = "SELECT cu.Customer_ID,cu.Account_Number, `Salutation`, `Customer_Name`, `Surname`, "
                        + "`Forename_1`, `Forename_2`, `Customer_Acronym`, cu.Vision_OUC, "
                        + "cu.Vision_SBU, `Customer_Open_Date`, `Customer_Gender`, "
                        + "`Date_of_Birth`, `Place_of_Birth`, `Marital_Status`, `Spouse_Name`, "
                        + "`Social_Economic_Class`, `Next_of_kin_Name`, `Next_of_kin_ID_Type`, "
                        + "`Next_of_kin_ID_Number`, `Next_of_kin_Telephone`, `Next_of_kin_Email_ID`, "
                        + "`Number_Of_Dependants`, `Account_Mandate_Name`, `Account_Mandate_ID_Type`, "
                        + "`Account_Mandate_ID_Number`, `Nationality`, `Residence`, `Comm_Address_1`,"
                        + " `Comm_Address_2`, `Comm_Village`, `Comm_Country`, `Comm_Residence_Type`,"
                        + " `Perm_Address_1`, `Perm_Address_2`, `Perm_Village`, `Perm_Country`, "
                        + "`Email_ID`, `Work_Telephone`, `Home_Telephone`, `Fax_Number_1`, "
                        + "`Fax_Number_2`, `Education`, `Customer_TIN`, `NAICS_Code`, cu.Economic_Sub_Sector_Code_ISIC, "
                        + "`Related_Party`, `Relationship_Type`, `Related_Party_Name`, `Local_Govt_Member`,"
                        + " `Internet_Banking_Subscription`, `Mobile_Banking_Subscription`, `SSN_Number`, "
                        + "`National_ID_Type`, `National_ID_Number`, `Health_Insurance_Number`, `Occupation`,"
                        + " `Employer_Name`, `Employee_ID`, `Emp_Address_1`, `Emp_Address_2`, `Emp_Village`,"
                        + " `Emp_Country`, `Income`, `Income_Frequency`, `Group_Name`, `Group_Number`, `Legal_Status`,"
                        + " `Customer_Status`,ac.Account_Status,ac.Account_Type,ac.Freeze_Status,"
                        + "ac.Public_Sector_Code,ac.Institutional_Sector_Code,ac.Account_Ownership,"
                        + "ac.Performance_Class,ac.Credit_Category,"
                        + "ac.Account_Status_Date,ac.Account_Open_Date,"
                        + "ac.Account_Closing_Date,ac.Int_Rate_Dr,ac.Int_Rate_Cr,"
                        + "ac.Economic_Sub_Sector_Code,"
                        + " ac.Joint_Participant_Count,ac.Card_Subscription "
                        + "FROM customer_information cu inner JOIN account_information ac on ac.Account_Number = cu.Account_Number "
                        + "WHERE cu.Account_Number = ?";
                pst = conn.connection.prepareStatement(sql);
                pst.setString(1, searchAccountField);
                rs = pst.executeQuery();
                if (rs.next()) {
                    
                    saveupdate.setVisible(false);
                    customer_id.setText(rs.getString("Customer_ID"));
                    account_number.setText(rs.getString("Account_Number"));
                    salutation.getModel().setSelectedItem(rs.getString("Salutation"));
                    customer_name.setText(rs.getString("Customer_Name"));
                    surname.setText(rs.getString("Surname"));
                    forename_1.setText(rs.getString("Forename_1"));
                    forename_2.setText(rs.getString("Forename_2"));
                    customer_acronym.setText(rs.getString("Customer_Acronym"));
                    vision_ouc.setText(rs.getString("cu.Vision_OUC"));
                    if (rs.getDate("Date_of_Birth") == null){
                        date_of_birth.setCalendar(null);
                    }else{
                        date_of_birth.setDate(rs.getDate("Date_of_Birth"));
                    }
                    customer_open_date.setDate(rs.getDate("Customer_Open_Date"));

                    customer_gender.getModel().setSelectedItem(getKey(genderCodes, rs.getString("Customer_Gender")));
                    place_of_birth.setText(rs.getString("Place_of_Birth"));
                    vision_sbu.getModel().setSelectedItem(getKey(visionSBUCodes, rs.getString("cu.Vision_SBU")));
                    marital_status.getModel().setSelectedItem(getKey(maritalStatusCodes, rs.getString("Marital_Status")));

                    spouse_name.setText(rs.getString("Spouse_Name"));
                    social_economic_class.getModel().setSelectedItem(rs.getString("Social_Economic_Class"));
                    next_of_kin_name.setText(rs.getString("Next_of_kin_Name"));
                    next_of_kin_id_type.getModel().setSelectedItem("National_ID(Mandatory for Rwandan Nationals");
                    next_of_kin_id_no.setText(rs.getString("Next_of_kin_ID_Number"));
                    next_of_kin_telephone.setText(rs.getString("Next_of_kin_Telephone"));
                    next_of_kin_email.setText(rs.getString("Next_of_kin_Email_ID"));

                    number_of_dependants.setText(rs.getString("Number_Of_Dependants"));
                    account_mandate_id_type.getModel().setSelectedItem("National_ID(Mandatory for Rwandan Nationals");
                    account_mandate_name.setText(rs.getString("Account_Mandate_Name"));
                    account_mandate_id_number.setText(rs.getString("Account_Mandate_ID_Number"));

                    nationality.getModel().setSelectedItem(rs.getString("Nationality"));
                    residence.getModel().setSelectedItem(rs.getString("Residence"));
                    comm_address_1.setText(rs.getString("Comm_Address_1"));
                    comm_address_2.setText(rs.getString("Comm_Address_2"));
                    comm_village.getModel().setSelectedItem(getKey(villages, rs.getString("Comm_Village")));
                    comm_country.getModel().setSelectedItem(rs.getString("Comm_Country"));
                    comm_residence_type.getModel().setSelectedItem(getKey(residenceTypeCodes,rs.getString("Comm_Residence_Type")));
                    perm_address_1.setText(rs.getString("Perm_Address_1"));
                    perm_address_2.setText(rs.getString("Perm_Address_2"));
                    perm_village.getModel().setSelectedItem(getKey(villages, rs.getString("Perm_Village")));
                    permanent_country.getModel().setSelectedItem(rs.getString("Perm_Country"));

                    email.setText(rs.getString("Email_ID"));
                    work_telephone.setText(rs.getString("Work_Telephone"));
                    home_telephone.setText(rs.getString("Home_Telephone"));
                    fax_number_1.setText(rs.getString("Fax_Number_1"));
                    fax_number_2.setText(rs.getString("Fax_Number_2"));

                    education.getModel().setSelectedItem(getKeyFromValue(educationCodes, Integer.parseInt(rs.getString("Education"))));
                    customer_tin.setText(rs.getString("Customer_TIN"));
                    naics_code.getModel().setSelectedItem(getKeyFromValue(naicsCodes, Integer.parseInt(rs.getString("NAICS_Code"))));
                    economic_sub_sector_isic.getModel().setSelectedItem(getKey(economicsubsectorISICCodes, rs.getString("cu.Economic_Sub_Sector_Code_ISIC").trim()));
                    related_party.getModel().setSelectedItem(rs.getString("Related_Party"));
                    relationship_type.getModel().setSelectedItem(getKeyFromValue(relationshipTypeCodes, Integer.parseInt(rs.getString("Relationship_Type"))));
                    related_party_name.setText(rs.getString("Related_Party_Name"));
                    local_govt_member.getModel().setSelectedItem(rs.getString("Local_Govt_Member"));
                    internet_banking_subscription.getModel().setSelectedItem(rs.getString("Internet_Banking_Subscription"));
                    mobile_banking_subscription.getModel().setSelectedItem(rs.getString("Mobile_Banking_Subscription"));
                    ssn_number.setText(rs.getString("SSN_Number"));
                   
                    
                    national_id_type.getModel().setSelectedItem(getKeyFromValue(nationalIdTypeCodes,Integer.parseInt(rs.getString("National_ID_Type"))));
                    national_id_number.setText(rs.getString("National_ID_Number"));
                    health_insurance_number.setText(rs.getString("Health_Insurance_Number"));

                    occupation.getModel().setSelectedItem(getKeyFromValue(occupationCodes, Integer.parseInt(rs.getString("Occupation"))));
                    employer_name.setText(rs.getString("Employer_Name"));
                    employee_id.setText(rs.getString("Employee_ID"));
                    emp_address_1.setText(rs.getString("Emp_Address_1"));
                    emp_address_2.setText(rs.getString("Emp_Address_2"));
                    emp_village.getModel().setSelectedItem(getKey(villages, rs.getString("Emp_Village")));
                    emp_country.getModel().setSelectedItem(rs.getString("Emp_Country"));

                    income.getModel().setSelectedItem(getKeyFromValue(incomeRangesCodes, Integer.parseInt(rs.getString("Income"))));
                    income_frequency.getModel().setSelectedItem(getKey(incomeFrequencyCodes,rs.getString("Income_Frequency")));
                    group_name.setText(rs.getString("Group_Name"));
                    group_number.setText(rs.getString("Group_Number"));
                    legal_status.getModel().setSelectedItem(getKeyFromValue(legalStatusCodes,Integer.parseInt(rs.getString("Legal_Status"))));
                    customer_status.getModel().setSelectedItem(getKeyFromValue(customerStatusCodes,Integer.parseInt(rs.getString("Customer_Status"))));

                    account_status.getModel().setSelectedItem(getKey(accountStatusCodes, Integer.parseInt(rs.getString("ac.Account_Status"))));
                    account_type.getModel().setSelectedItem(getKey(accountTypeCodes,rs.getString("ac.Account_Type")));
                    freeze_status.getModel().setSelectedItem(getKey(freezeStatusCodes, rs.getString("ac.Freeze_Status")));
                    interest_rate_credit.setText(rs.getString("ac.Int_Rate_Cr"));
                    interest_rate_debit.setText(rs.getString("ac.Int_Rate_Dr"));
                    public_sector_code.getModel().setSelectedItem(getKey(publicSectorCodes, rs.getString("ac.Public_Sector_Code")));
           
                    economic_sub_sector.getModel().setSelectedItem(rs.getString("ac.Economic_Sub_Sector_Code"));
                    institutional_sector_code.getModel().setSelectedItem(getKey(institutionalSectorCodes, rs.getString("ac.Institutional_Sector_Code")));
                    account_ownership.getModel().setSelectedItem(getKey(accountOwnerShipCodes, rs.getString("ac.Account_Ownership")));
                    joint_participation_count.setText(rs.getString("ac.Joint_Participant_Count"));
                    card_subscription.getModel().setSelectedItem(rs.getString("ac.Card_Subscription"));
                    performance_class.getModel().setSelectedItem(getKey(performanceClassCodes, rs.getString("ac.Performance_Class")));
                    credit_category.getModel().setSelectedItem(getKey(creditCategoryCodes, Integer.parseInt(rs.getString("ac.Credit_Category"))));
                    account_status_date.setDate(rs.getDate("ac.Account_Status_Date"));
                } else {
                    JOptionPane.showMessageDialog(null, "Sorry this account does not exist!", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Teller_Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            new ViewLastNames(search_field.getText()).setVisible(true);
        }
    }

    private void updateCustomer(String accountNumber) {

        //Validation
        if (salutation.getSelectedItem().toString().equalsIgnoreCase("Select Salutation")) {
            JOptionPane.showMessageDialog(null, "Invalid Salutation", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Customer name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (surname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The last name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (forename_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The first name field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_acronym.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The customer acronym field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (forename_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Sacco Branch field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (visionSBUCodes.get(vision_sbu.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The business segment field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (genderCodes.get(customer_gender.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The Customer gender field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (number_of_dependants.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The number of dependants field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (residence.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The residence field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (comm_address_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The communication address field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (perm_address_1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The permanent address field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (email.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Email field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!helper.isEmailValid(email.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Email field Format", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (work_telephone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The work telephone field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (work_telephone.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The work telephone field has to be 10 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (home_telephone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The home telephone field is required!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (home_telephone.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The home telephone field has to be 10 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (occupationCodes.get(occupation.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The occupation field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (educationCodes.get(education.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The education field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (naicsCodes.get(naics_code.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The NAICS Code field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (economicsubsectorISICCodes.get(economic_sub_sector_isic.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The economic sub sector field ISIC is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (nationalIdTypeCodes.get(national_id_type.getSelectedItem().toString()) == 2 && national_id_number.getText().length() != 16) {
            JOptionPane.showMessageDialog(null, "The ID Number field should be 16 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customerStatusCodes.get(customer_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The customer status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (legalStatusCodes.get(legal_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The legal status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (national_id_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The ID number field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (accountStatusCodes.get(account_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The account status field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (accountTypeCodes.get(account_type.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The account type field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (freezeStatusCodes.get(freeze_status.getSelectedItem().toString()) == null) {
            JOptionPane.showMessageDialog(null, "The freeze status is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (interest_rate_credit.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The interest rate credit field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (interest_rate_debit.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The interest rate debit field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (joint_participation_count.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The joint participation count field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(emp_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The Emp Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(comm_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The Comm Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (villages.get(perm_village.getSelectedItem().toString()).length() > 10) {
            JOptionPane.showMessageDialog(null, "The perm Village field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (employee_id.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "The Employee ID field shoud be at most 15 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (health_insurance_number.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "The Health Insurance Number field shoud be at most 15 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_tin.getText().length() > 10) {
            JOptionPane.showMessageDialog(null, "The Customer TIN field shoud be at most 10 characters", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (date_of_birth.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No date of birth specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_open_date.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No account opening date specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (account_status_date.getDate() == null) {
            JOptionPane.showMessageDialog(null, "No accoount status date specified!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (nationality.getSelectedItem().toString().equalsIgnoreCase("Select Nationality")) {
            JOptionPane.showMessageDialog(null, "The nationality field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (social_economic_class.getSelectedItem().toString().equalsIgnoreCase("Select Social Economic Class")) {
            JOptionPane.showMessageDialog(null, "The Social Economic Class field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The Customer ID field is required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (customer_id.getText().length() != 10) {
            JOptionPane.showMessageDialog(null, "The customer ID field is badly formatted", "Error", JOptionPane.ERROR_MESSAGE);
        } //        else if (helper.getAccountOwnershipCode(account_ownership.getSelectedItem().toString()).isEmpty()) {
        //            JOptionPane.showMessageDialog(null, "The Account Ownership field is required", "Error", JOptionPane.ERROR_MESSAGE);
        //        } else if (helper.getIncomeRangeCode(income.getSelectedItem().toString()) == -1) {
        //            JOptionPane.showMessageDialog(null, "The Income field is required", "Error", JOptionPane.ERROR_MESSAGE);
        //        } 
        else {
            updateCustomerInformationTable(accountNumber);
        }
    }

    private void updateCustomerInformationTable(String accountNumber) {
        try {
            java.util.Date birthDate = date_of_birth.getDate();
            java.sql.Date sqlBirthDate = new java.sql.Date(birthDate.getTime());
            java.util.Date openingDate = customer_open_date.getDate();
            java.sql.Date sqlOpeningDate = new java.sql.Date(openingDate.getTime());

            int nextOfKinIdType = 2;

            String sql = "UPDATE `customer_information` SET `Customer_ID` = ?,"
                    + "`Salutation` = ?, "
                    + "`Customer_Name`= ?, "
                    + "`Surname`= ?, "
                    + "`Forename_1`= ?,"
                    + "`Forename_2`= ?,"
                    + "`Customer_Acronym`= ?, "
                    + "`Vision_OUC`= ?, "
                    + "`Vision_SBU` = ?, "
                    + "`Customer_Open_Date`= ?, "
                    + "`Customer_Gender`= ?, "
                    + "`Date_of_Birth`= ?, "
                    + "`Place_of_Birth`= ?, "
                    + "`Marital_Status`= ?, "
                    + "`Spouse_Name`= ?, "
                    + "`Social_Economic_Class`= ?, "
                    + "`Next_of_kin_Name`= ?, "
                    + "`Next_of_kin_ID_Type`= ?, "
                    + "`Next_of_kin_ID_Number`= ?, "
                    + "`Next_of_kin_Telephone`= ?, "
                    + "`Next_of_kin_Email_ID`= ?, "
                    + "`Number_Of_Dependants`= ?, "
                    + "`Account_Mandate_Name`= ?, "
                    + "`Account_Mandate_ID_Type`= ?, "
                    + "`Account_Mandate_ID_Number`= ?, "
                    + "`Nationality`= ?, "
                    + "`Residence`= ?, "
                    + "`Comm_Address_1`= ?, "
                    + "`Comm_Address_2`= ?, "
                    + "`Comm_Village`= ?, "
                    + "`Comm_Country`= ?, "
                    + "`Comm_Residence_Type`= ?, "
                    + "`Perm_Address_1`= ?, "
                    + "`Perm_Address_2`= ?, "
                    + "`Perm_Village`= ?, "
                    + "`Perm_Country`= ?, "
                    + "`Email_ID`= ?, "
                    + "`Work_Telephone`= ?, "
                    + "`Home_Telephone`= ?, "
                    + "`Fax_Number_1`= ?, "
                    + "`Fax_Number_2`= ?, "
                    + "`Education`= ?, "
                    + "`Customer_TIN`= ?, "
                    + "`NAICS_Code`= ?, "
                    + "`Economic_Sub_Sector_Code_ISIC`= ?, "
                    + "`Related_Party`= ?, "
                    + "`Relationship_Type`= ?, "
                    + "`Related_Party_Name`= ?, "
                    + "`Local_Govt_Member`= ?, "
                    + "`Internet_Banking_Subscription`= ?, "
                    + "`Mobile_Banking_Subscription`= ?, "
                    + "`SSN_Number`= ?, "
                    + "`National_ID_Type`= ?, "
                    + "`National_ID_Number`= ?, "
                    + "`Health_Insurance_Number`= ?, "
                    + "`Occupation`= ?, "
                    + "`Employer_Name`= ?, "
                    + "`Employee_ID`= ?, "
                    + "`Emp_Address_1`= ?, "
                    + "`Emp_Address_2`= ?, "
                    + "`Emp_Village`= ?, "
                    + "`Emp_Country`= ?, "
                    + "`Income`= ?, "
                    + "`Income_Frequency`= ?, "
                    + "`Group_Name`= ?, "
                    + "`Group_Number`= ?, "
                    + "`Legal_Status`= ?, "
                    + "`Customer_Status`= ?, "
                    + "`Date_Last_Modified` = NOW() WHERE Account_Number = ?";

            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, customer_id.getText());
            pst.setString(2, salutation.getSelectedItem().toString());
            pst.setString(3, customer_name.getText());
            pst.setString(4, surname.getText());
            pst.setString(5, forename_1.getText());
            pst.setString(6, forename_2.getText());
            pst.setString(7, customer_acronym.getText());
            pst.setString(8, vision_ouc.getText());
            pst.setString(9, visionSBUCodes.get(vision_sbu.getSelectedItem().toString()));
            pst.setString(10, sqlOpeningDate.toString());
            pst.setString(11, genderCodes.get(customer_gender.getSelectedItem().toString()));
            pst.setString(12, sqlBirthDate.toString());
            pst.setString(13, place_of_birth.getText());
            pst.setString(14, maritalStatusCodes.get(marital_status.getSelectedItem().toString()));
            pst.setString(15, spouse_name.getText());
            pst.setInt(16, Integer.parseInt(social_economic_class.getSelectedItem().toString()));
            pst.setString(17, next_of_kin_name.getText());
            pst.setInt(18, nextOfKinIdType);
            pst.setString(19, next_of_kin_id_no.getText());
            pst.setString(20, next_of_kin_telephone.getText());
            pst.setString(21, next_of_kin_email.getText());
            pst.setString(22, number_of_dependants.getText());
            pst.setString(23, account_mandate_name.getText());
            pst.setInt(24, 2);
            pst.setString(25, account_mandate_id_number.getText());
            pst.setString(26, nationality.getSelectedItem().toString());
            pst.setString(27, residence.getSelectedItem().toString());
            pst.setString(28, comm_address_1.getText());
            pst.setString(29, comm_address_2.getText());
            pst.setString(30, villages.get(comm_village.getSelectedItem().toString()));

            pst.setString(31, comm_country.getSelectedItem().toString());
            pst.setString(32, residenceTypeCodes.get(comm_residence_type.getSelectedItem().toString()));
            pst.setString(33, perm_address_1.getText());
            pst.setString(34, perm_address_2.getText());
            pst.setString(35, villages.get(perm_village.getSelectedItem().toString()));
            pst.setString(36, permanent_country.getSelectedItem().toString());
            pst.setString(37, email.getText());
            pst.setString(38, work_telephone.getText());
            pst.setString(39, home_telephone.getText());
            pst.setString(40, fax_number_1.getText());

            pst.setString(41, fax_number_2.getText());
            pst.setInt(42, educationCodes.get(education.getSelectedItem().toString()));
            pst.setString(43, customer_tin.getText());
            pst.setInt(44, naicsCodes.get(naics_code.getSelectedItem().toString()));
            pst.setString(45, economicsubsectorISICCodes.get(economic_sub_sector_isic.getSelectedItem().toString()));
            pst.setString(46, related_party.getSelectedItem().toString());
            pst.setInt(47, relationshipTypeCodes.get(relationship_type.getSelectedItem().toString()));
            pst.setString(48, related_party_name.getText());
            pst.setString(49, local_govt_member.getSelectedItem().toString());
            pst.setString(50, internet_banking_subscription.getSelectedItem().toString());

            pst.setString(51, mobile_banking_subscription.getSelectedItem().toString());
            pst.setString(52, ssn_number.getText());
            pst.setInt(53, 2);
            pst.setString(54, national_id_number.getText());
            pst.setString(55, health_insurance_number.getText());
            pst.setInt(56, occupationCodes.get(occupation.getSelectedItem().toString()));
            pst.setString(57, employer_name.getText());
            pst.setString(58, employee_id.getText());
            pst.setString(59, emp_address_1.getText());
            pst.setString(60, emp_address_2.getText());

            pst.setString(61, villages.get(emp_village.getSelectedItem().toString()));
            pst.setString(62, emp_country.getSelectedItem().toString());
            pst.setInt(63, incomeRangesCodes.get((String) income.getSelectedItem()));
            pst.setString(64, incomeFrequencyCodes.get((String) income_frequency.getSelectedItem()));
            pst.setString(65, group_name.getText());
            pst.setString(66, group_number.getText());
            pst.setInt(67, legalStatusCodes.get((String) legal_status.getSelectedItem()));
            pst.setInt(68, customerStatusCodes.get((String) customer_status.getSelectedItem()));
            pst.setString(69, accountNumber);
            int update = pst.executeUpdate();
            if (update > 0) {
                updateAccountInformationTable(accountNumber);
            }

        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void updateAccountInformationTable(String accountNumber) {
        try {
            java.util.Date accountStatusDate = account_status_date.getDate();
            java.sql.Date sqlAccountStatusDate = new java.sql.Date(accountStatusDate.getTime());

            java.util.Date openingDate = customer_open_date.getDate();
            java.sql.Date sqlOpeningDate = new java.sql.Date(openingDate.getTime());

            String sql = "UPDATE `account_information` SET `Account_Status` = ?, Account_Status_Date = ?, Account_Type= ?,"
                    + "Account_Open_Date = ?,Freeze_Status = ?,Int_Rate_Dr = ?,Int_Rate_Cr = ?, Economic_Sub_Sector_Code= ?,"
                    + "Public_Sector_Code = ?, Institutional_Sector_Code = ?, Account_Ownership = ?, Joint_Participant_Count= ?,"
                    + "Card_Subscription = ?, Performance_Class= ?,Credit_Category= ?,Vision_SBU_Full = ?,Account_Status_Full =?,"
                    + "Account_Type_Full = ?,Freeze_Status_Full= ?,Economic_Sub_Sector_Code_ISIC_Full= ?,Public_Sector_Code_Full= ?,"
                    + "Institutional_Sector_Code_Full= ?,Account_Ownership_Full= ?,Performance_Class_Full= ?,"
                    + "`Date_Last_Modified` = NOW(),"
                    + "Credit_Category_Full=?,Account_Name=?, Vision_OUC=?, Vision_SBU=?, Customer_ID=?, Country=?, LE_Book=?, Vision_GL=?, Currency=? WHERE Account_Number = ?";

            pst = conn.connection.prepareStatement(sql);
            pst.setInt(1, customerStatusCodes.get(account_status.getSelectedItem().toString()));
            pst.setString(2, sqlAccountStatusDate.toString());
            pst.setString(3, accountTypeCodes.get(account_type.getSelectedItem().toString()));
            pst.setString(4, sqlOpeningDate.toString());
            pst.setString(5, freezeStatusCodes.get(freeze_status.getSelectedItem().toString()));
            pst.setFloat(6, Float.valueOf(interest_rate_debit.getText().trim()));
            pst.setFloat(7, Float.valueOf(interest_rate_credit.getText().trim()));
            pst.setString(8, economic_sub_sector.getSelectedItem().toString());
            pst.setString(9, publicSectorCodes.get(public_sector_code.getSelectedItem().toString()));
            pst.setString(10, institutionalSectorCodes.get(institutional_sector_code.getSelectedItem().toString()));
            pst.setString(11, accountOwnerShipCodes.get(account_ownership.getSelectedItem().toString()));
            pst.setString(12, joint_participation_count.getText());
            pst.setString(13, card_subscription.getSelectedItem().toString());
            pst.setString(14, performanceClassCodes.get(performance_class.getSelectedItem().toString()));
            pst.setInt(15, creditCategoryCodes.get(credit_category.getSelectedItem().toString()));
            pst.setString(16, vision_sbu.getSelectedItem().toString());
            pst.setString(17, account_status.getSelectedItem().toString());
            pst.setString(18, account_type.getSelectedItem().toString());
            pst.setString(19, freeze_status.getSelectedItem().toString());
            pst.setString(20, economic_sub_sector_isic.getSelectedItem().toString());
            pst.setString(21, public_sector_code.getSelectedItem().toString());
            pst.setString(22, institutional_sector_code.getSelectedItem().toString());
            pst.setString(23, account_ownership.getSelectedItem().toString());
            pst.setString(24, performance_class.getSelectedItem().toString());
            pst.setString(25, credit_category.getSelectedItem().toString());
            pst.setString(26, customer_name.getText());
            pst.setString(27, vision_ouc.getText());
            pst.setString(28, visionSBUCodes.get((String) vision_sbu.getSelectedItem()));
            pst.setString(29, customer_id.getText());
            pst.setString(30, "RW");
            pst.setString(31, "519");
            pst.setString(32, "200080");
            pst.setString(33, "RWF");
            pst.setString(34, account_number.getText());

            int update = pst.executeUpdate();
            System.out.println(update);
            if (update > 0) {
                JOptionPane.showMessageDialog(null, "Account Info has been Updated!");
                clearFormFields();
            }
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void clearFormFields() {

        salutation.getModel().setSelectedItem("Select Salutation");
        salutation.setEnabled(false);
        account_number.setText("");
        account_number.setEnabled(false);
        customer_name.setText("");
        customer_name.setEnabled(false);
        surname.setText("");
        surname.setEnabled(false);
        forename_1.setText("");
        forename_1.setEnabled(false);
        forename_2.setText("");
        forename_2.setEnabled(false);
        customer_acronym.setText("");
        customer_acronym.setEnabled(false);
        vision_ouc.setEnabled(false);
        vision_sbu.getModel().setSelectedItem("Select Business Segment");
        vision_sbu.setEnabled(false);
        marital_status.getModel().setSelectedItem("Select Marital Status");
        marital_status.setEnabled(false);
        social_economic_class.getModel().setSelectedItem("Select Social Economic Class");
        social_economic_class.setEnabled(false);
        number_of_dependants.setEnabled(false);
        email.setText("");
        email.setEnabled(false);
        place_of_birth.setText("");
        place_of_birth.setEnabled(false);
        work_telephone.setText("");
        work_telephone.setEnabled(false);
        home_telephone.setText("");
        home_telephone.setEnabled(false);
        education.getModel().setSelectedItem("Select Highest Education");
        education.setEnabled(false);
        occupation.getModel().setSelectedItem("Select Occupation");
        occupation.setEnabled(false);
        national_id_type.getModel().setSelectedItem("Select ID Type");
        national_id_type.setEnabled(false);
        national_id_number.setText("");
        national_id_number.setEnabled(false);
        economic_sub_sector_isic.getModel().setSelectedItem("Other personal service activities n.e.c.");
        economic_sub_sector_isic.setEnabled(false);
        naics_code.getModel().setSelectedItem("Default NAICS Code");
        naics_code.setEnabled(false);
        related_party.getModel().setSelectedItem("NON");
        related_party.setEnabled(false);
        relationship_type.getModel().setSelectedItem("Non Related Party");
        relationship_type.setEnabled(false);
        internet_banking_subscription.setEnabled(false);
        mobile_banking_subscription.setEnabled(false);
        customer_gender.getModel().setSelectedItem("Select Gender");
        customer_gender.setEnabled(false);
        customer_status.getModel().setSelectedItem("Select Customer Status");
        customer_status.setEnabled(false);
        account_status.getModel().setSelectedItem("Select Status");
        account_status.setEnabled(false);
        account_type.getModel().setSelectedItem("Select Account Type");
        account_type.setEnabled(false);
        freeze_status.setEnabled(false);
        interest_rate_credit.setEnabled(false);
        interest_rate_debit.setEnabled(false);
        public_sector_code.setEnabled(false);
        economic_sub_sector.getModel().setSelectedItem("Select Sub Sector Code");
        economic_sub_sector.setEnabled(false);
        institutional_sector_code.getModel().setSelectedItem("Select Sector");
        institutional_sector_code.setEnabled(false);
        account_ownership.getModel().setSelectedItem("Select Ownership");
        account_ownership.setEnabled(false);
        joint_participation_count.setEnabled(false);
        card_subscription.setEnabled(false);
        performance_class.getModel().setSelectedItem("Select Class");
        performance_class.setEnabled(false);
        credit_category.getModel().setSelectedItem("Select Category");
        credit_category.setEnabled(false);
        date_of_birth.setEnabled(false);
        customer_open_date.setEnabled(false);
        account_status_date.setEnabled(false);
        account_mandate_id_number.setEnabled(false);
        account_mandate_id_type.setEnabled(false);
        account_mandate_name.setEnabled(false);
        nationality.setEnabled(false);

        customer_id.setText("");
        customer_id.setEnabled(false);
        spouse_name.setText("");
        spouse_name.setEnabled(false);
        next_of_kin_email.setText("");
        next_of_kin_email.setEnabled(false);
        next_of_kin_id_no.setText("");
        next_of_kin_id_no.setEnabled(false);
        next_of_kin_id_type.setEnabled(false);
        next_of_kin_name.setEnabled(false);
        next_of_kin_telephone.setText("");
        next_of_kin_telephone.setEnabled(false);

        residence.setEnabled(false);
        comm_address_1.setText("");
        comm_address_1.setEnabled(false);
        comm_address_2.setText("");
        comm_address_2.setEnabled(false);
        comm_village.getModel().setSelectedItem("Select Village");
        comm_village.setEnabled(false);
        comm_country.setEnabled(false);
        comm_residence_type.setEnabled(false);
        perm_address_1.setText("");
        perm_address_1.setEnabled(false);
        perm_address_2.setText("");
        perm_address_2.setEnabled(false);
        perm_village.getModel().setSelectedItem("Select Village");
        perm_village.setEnabled(false);
        permanent_country.setEnabled(false);

        fax_number_1.setText("");
        fax_number_1.setEnabled(false);
        fax_number_2.setText("");
        fax_number_2.setEnabled(false);
        employer_name.setText("");
        employer_name.setEnabled(false);
        employee_id.setText("");
        employee_id.setEnabled(false);
        emp_address_1.setText("");
        emp_address_1.setEnabled(false);
        emp_address_2.setText("");
        emp_address_2.setEnabled(false);
        emp_village.getModel().setSelectedItem("Select Village");
        emp_village.setEnabled(false);
        emp_country.setEnabled(false);
        ssn_number.setText("");
        ssn_number.setEnabled(false);
        related_party_name.setText("");
        related_party_name.setEnabled(false);

        local_govt_member.setEnabled(true);
        customer_tin.setText("");
        customer_tin.setEnabled(false);
        health_insurance_number.setText("");
        health_insurance_number.setEnabled(false);
        income.setEnabled(false);
        income_frequency.setEnabled(false);
        group_name.setText("");
        group_name.setEnabled(false);
        group_number.setText("");
        group_number.setEnabled(false);
        customer_status.setEnabled(false);
        legal_status.setEnabled(false);
        account_number.setText("");
        search_field.setText("");

        saveupdate.setVisible(false);
    }

    private void deleteClient(String acc) throws SQLException {
        String sql = "DELETE FROM `customer_information` WHERE Account_Number=?";
        pst = conn.connection.prepareStatement(sql);
        pst.setString(1, acc);
        int deleteAccountNumber = pst.executeUpdate();
        if (deleteAccountNumber > 0) {

            String sql_delete_account_information = "DELETE FROM `account_information` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_account_information);
            pst.setString(1, acc);
            int delete_account_information = pst.executeUpdate();
            System.out.println(delete_account_information);

            String sql_delete_initial_deposit = "DELETE FROM `initial_deposit` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_initial_deposit);
            pst.setString(1, acc);
            int delete_initial_deposit = pst.executeUpdate();
            System.out.println(delete_initial_deposit);

            String sql_delete_transactions = "DELETE FROM `transactions` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_transactions);
            pst.setString(1, acc);
            int delete_transactions = pst.executeUpdate();
            System.out.println(delete_transactions);

            String sql_delete_balance = "DELETE FROM `balance` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_balance);
            pst.setString(1, acc);
            int delete_balance = pst.executeUpdate();
            System.out.println(delete_balance);

            String sql_delete_product = "DELETE FROM `product` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_product);
            pst.setString(1, acc);
            int delete_product = pst.executeUpdate();
            System.out.println(delete_product);

            String sql_delete_financial_transaction = "DELETE FROM `financial_transaction` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_financial_transaction);
            pst.setString(1, acc);
            int delete_financial_transaction = pst.executeUpdate();
            System.out.println(delete_financial_transaction);

            String sql_delete_financial_cash_limit_transaction = "DELETE FROM `financial_cash_limit_transaction` WHERE Account_Number=?";
            pst = conn.connection.prepareStatement(sql_delete_financial_cash_limit_transaction);
            pst.setString(1, acc);
            int delete_financial_cash_limit_transaction = pst.executeUpdate();
            System.out.println(delete_financial_cash_limit_transaction);

            JOptionPane.showMessageDialog(null, "Account was deleted successfully!", "DELETE ACCOUNT", JOptionPane.CANCEL_OPTION);
        }
    }

    private void next_of_kin_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_of_kin_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_next_of_kin_nameActionPerformed

    private void employee_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employee_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employee_idActionPerformed

    private void comm_address_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comm_address_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comm_address_2ActionPerformed

    private void interest_rate_creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interest_rate_creditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interest_rate_creditActionPerformed

    private void work_telephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work_telephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_work_telephoneActionPerformed

    private void customer_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_statusActionPerformed

    private void health_insurance_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_health_insurance_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_health_insurance_numberActionPerformed

    private void social_economic_classActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_social_economic_classActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_social_economic_classActionPerformed

    private void new_accountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_new_accountMouseClicked
        // TODO add your handling code here:
        new CreateAccount().setVisible(true);
    }//GEN-LAST:event_new_accountMouseClicked

    private void new_depositMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_new_depositMouseClicked
        // TODO add your handling code here:
        new Deposit().setVisible(true);
    }//GEN-LAST:event_new_depositMouseClicked

    private void new_withdrawalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_new_withdrawalMouseClicked
        // TODO add your handling code here:
        new Withdraw().setVisible(true);
    }//GEN-LAST:event_new_withdrawalMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        prefs.remove("employee_key");
        prefs.remove("firstname");
        prefs.remove("lastname");
        prefs.remove("username");
        prefs.remove("email");
        prefs.remove("title");
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_exitMouseClicked

    private void search_accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_accountActionPerformed
        // TODO add your handling code here:
        if (search_field.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number or customer's Last name", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            searchAccount(search_field.getText(), search_field_choice.getSelectedItem().toString());
        }
    }//GEN-LAST:event_search_accountActionPerformed

    private void saveupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveupdateActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to update this account?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            updateCustomer(account_number.getText());
        }
    }//GEN-LAST:event_saveupdateActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if (!account_number.getText().isEmpty()) {
            salutation.setEnabled(true);
            account_number.setEnabled(true);
            customer_name.setEnabled(true);
            surname.setEnabled(true);
            forename_1.setEnabled(true);
            forename_2.setEnabled(true);
            customer_acronym.setEnabled(true);
            vision_ouc.setEnabled(true);
            vision_sbu.setEnabled(true);
            marital_status.setEnabled(true);
            social_economic_class.setEnabled(true);
            number_of_dependants.setEnabled(true);
            email.setEnabled(true);
            place_of_birth.setEnabled(true);
            work_telephone.setEnabled(true);
            home_telephone.setEnabled(true);
            education.setEnabled(true);
            occupation.setEnabled(true);
            national_id_type.setEnabled(true);
            national_id_number.setEnabled(true);
            economic_sub_sector_isic.setEnabled(true);
            naics_code.setEnabled(true);
            related_party.setEnabled(true);
            relationship_type.setEnabled(true);
            internet_banking_subscription.setEnabled(true);
            mobile_banking_subscription.setEnabled(true);
            customer_gender.setEnabled(true);
            customer_status.setEnabled(true);
            account_status.setEnabled(true);
            account_type.setEnabled(true);
            freeze_status.setEnabled(true);
            interest_rate_credit.setEnabled(true);
            interest_rate_debit.setEnabled(true);
            public_sector_code.setEnabled(true);
            economic_sub_sector.setEnabled(true);
            institutional_sector_code.setEnabled(true);
            account_ownership.setEnabled(true);
            joint_participation_count.setEnabled(true);
            card_subscription.setEnabled(true);
            performance_class.setEnabled(true);
            credit_category.setEnabled(true);
            date_of_birth.setEnabled(true);
            customer_open_date.setEnabled(true);
            account_status_date.setEnabled(true);
            account_mandate_id_number.setEnabled(true);
            account_mandate_id_type.setEnabled(true);
            account_mandate_name.setEnabled(true);
            nationality.setEnabled(true);

            customer_id.setEnabled(true);
            spouse_name.setEnabled(true);
            next_of_kin_email.setEnabled(true);
            next_of_kin_id_no.setEnabled(true);
            next_of_kin_id_type.setEnabled(true);
            next_of_kin_name.setEnabled(true);
            next_of_kin_telephone.setEnabled(true);

            residence.setEnabled(true);
            comm_address_1.setEnabled(true);
            comm_address_2.setEnabled(true);
            comm_village.setEnabled(true);
            comm_country.setEnabled(true);
            comm_residence_type.setEnabled(true);
            perm_address_1.setEnabled(true);
            perm_address_2.setEnabled(true);
            perm_village.setEnabled(true);
            permanent_country.setEnabled(true);

            fax_number_1.setEnabled(true);
            fax_number_2.setEnabled(true);
            employer_name.setEnabled(true);
            employee_id.setEnabled(true);
            emp_address_1.setEnabled(true);
            emp_address_2.setEnabled(true);
            emp_village.setEnabled(true);
            emp_country.setEnabled(true);
            ssn_number.setEnabled(true);
            related_party_name.setEnabled(true);

            local_govt_member.setEnabled(true);
            customer_tin.setEnabled(true);
            health_insurance_number.setEnabled(true);
            income.setEnabled(true);
            income_frequency.setEnabled(true);
            group_name.setEnabled(true);
            group_number.setEnabled(true);
            customer_status.setEnabled(true);
            legal_status.setEnabled(true);
            saveupdate.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter account number or customer's ID Number", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editActionPerformed

    private void view_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_balanceActionPerformed
        // TODO add your handling code here:
        if (account_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            new ViewBalance(account_number.getText()).setVisible(true);
        }
    }//GEN-LAST:event_view_balanceActionPerformed

    private void view_transactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_transactionsActionPerformed
        // TODO add your handling code here:
        if (account_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            new Transaction(account_number.getText()).setVisible(true);
        }
    }//GEN-LAST:event_view_transactionsActionPerformed

    private void view_part_socialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_part_socialActionPerformed
        // TODO add your handling code here:
        if (account_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            new ViewInitialDeposit(account_number.getText()).setVisible(true);
        }
    }//GEN-LAST:event_view_part_socialActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if (account_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this customer?");
            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    deleteClient(account_number.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(Teller_Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void epargne_obligatoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epargne_obligatoireActionPerformed
        // TODO add your handling code here:
        if (account_number.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            new ViewEpargneObligatoire(account_number.getText()).setVisible(true);
        }
    }//GEN-LAST:event_epargne_obligatoireActionPerformed

    private void new_savingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_savingsActionPerformed
        // TODO add your handling code here:
        if (!account_number.getText().isEmpty()) {
            new CreateSavingsAccount(account_number.getText()).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_new_savingsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!account_number.getText().isEmpty()) {
            new Transfer(account_number.getText()).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void new_term_depositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_term_depositActionPerformed
        // TODO add your handling code here:
        if (!account_number.getText().isEmpty()) {
            new CreateTermDeposit(account_number.getText()).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter account number", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_new_term_depositActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teller_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teller_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teller_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teller_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Teller_Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField account_mandate_id_number;
    private javax.swing.JComboBox<String> account_mandate_id_type;
    private javax.swing.JTextField account_mandate_name;
    private javax.swing.JTextField account_number;
    private javax.swing.JComboBox<String> account_ownership;
    private javax.swing.JComboBox<String> account_status;
    private com.toedter.calendar.JDateChooser account_status_date;
    private javax.swing.JComboBox<String> account_type;
    private javax.swing.JComboBox<String> card_subscription;
    private javax.swing.JTextField comm_address_1;
    private javax.swing.JTextField comm_address_2;
    private javax.swing.JComboBox<String> comm_country;
    private javax.swing.JComboBox<String> comm_residence_type;
    private javax.swing.JComboBox<String> comm_village;
    private javax.swing.JComboBox<String> credit_category;
    private javax.swing.JTextField customer_acronym;
    private javax.swing.JComboBox<String> customer_gender;
    private javax.swing.JFormattedTextField customer_id;
    private javax.swing.JTextField customer_name;
    private com.toedter.calendar.JDateChooser customer_open_date;
    private javax.swing.JComboBox<String> customer_status;
    private javax.swing.JTextField customer_tin;
    private com.toedter.calendar.JDateChooser date_of_birth;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> economic_sub_sector;
    private javax.swing.JComboBox<String> economic_sub_sector_isic;
    private javax.swing.JButton edit;
    private javax.swing.JComboBox<String> education;
    private javax.swing.JTextField email;
    private javax.swing.JTextField emp_address_1;
    private javax.swing.JTextField emp_address_2;
    private javax.swing.JComboBox<String> emp_country;
    private javax.swing.JComboBox<String> emp_village;
    private javax.swing.JTextField employee_id;
    private javax.swing.JTextField employer_name;
    private javax.swing.JButton epargne_obligatoire;
    private javax.swing.JLabel exit;
    private javax.swing.JTextField fax_number_1;
    private javax.swing.JTextField fax_number_2;
    private javax.swing.JTextField forename_1;
    private javax.swing.JTextField forename_2;
    private javax.swing.JComboBox<String> freeze_status;
    private javax.swing.JTextField group_name;
    private javax.swing.JTextField group_number;
    private javax.swing.JTextField health_insurance_number;
    private javax.swing.JTextField home_telephone;
    private javax.swing.JComboBox<String> income;
    private javax.swing.JComboBox<String> income_frequency;
    private javax.swing.JComboBox<String> institutional_sector_code;
    private javax.swing.JTextField interest_rate_credit;
    private javax.swing.JTextField interest_rate_debit;
    private javax.swing.JComboBox<String> internet_banking_subscription;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField joint_participation_count;
    private javax.swing.JComboBox<String> legal_status;
    private javax.swing.JComboBox<String> local_govt_member;
    private javax.swing.JComboBox<String> marital_status;
    private javax.swing.JComboBox<String> mobile_banking_subscription;
    private javax.swing.JLabel myinfo;
    private javax.swing.JComboBox<String> naics_code;
    private javax.swing.JTextField national_id_number;
    private javax.swing.JComboBox<String> national_id_type;
    private javax.swing.JComboBox<String> nationality;
    private javax.swing.JLabel new_account;
    private javax.swing.JLabel new_deposit;
    private javax.swing.JButton new_savings;
    private javax.swing.JButton new_term_deposit;
    private javax.swing.JLabel new_withdrawal;
    private javax.swing.JTextField next_of_kin_email;
    private javax.swing.JTextField next_of_kin_id_no;
    private javax.swing.JComboBox<String> next_of_kin_id_type;
    private javax.swing.JTextField next_of_kin_name;
    private javax.swing.JTextField next_of_kin_telephone;
    private javax.swing.JTextField number_of_dependants;
    private javax.swing.JComboBox<String> occupation;
    private javax.swing.JComboBox<String> performance_class;
    private javax.swing.JTextField perm_address_1;
    private javax.swing.JTextField perm_address_2;
    private javax.swing.JComboBox<String> perm_village;
    private javax.swing.JComboBox<String> permanent_country;
    private javax.swing.JTextField place_of_birth;
    private javax.swing.JComboBox<String> public_sector_code;
    private javax.swing.JComboBox<String> related_party;
    private javax.swing.JTextField related_party_name;
    private javax.swing.JComboBox<String> relationship_type;
    private javax.swing.JComboBox<String> residence;
    private javax.swing.JComboBox<String> salutation;
    private javax.swing.JButton saveupdate;
    private javax.swing.JButton search_account;
    private javax.swing.JTextField search_field;
    private javax.swing.JComboBox<String> search_field_choice;
    private javax.swing.JComboBox<String> social_economic_class;
    private javax.swing.JTextField spouse_name;
    private javax.swing.JTextField ssn_number;
    private javax.swing.JTextField surname;
    private javax.swing.JButton view_balance;
    private javax.swing.JButton view_part_social;
    private javax.swing.JButton view_transactions;
    private javax.swing.JTextField vision_ouc;
    private javax.swing.JComboBox<String> vision_sbu;
    private javax.swing.JTextField work_telephone;
    // End of variables declaration//GEN-END:variables

}
