/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bank;

/**
 *
 * @author chris
 */

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ViewEpargneObligatoire extends javax.swing.JFrame {

    /**
     * Creates new form ViewEpargneObligatoire
     */
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBConnection conn;
    PleaseWait pl = new PleaseWait();
    Preferences prefs = Preferences.userNodeForPackage(Teller_Dashboard.class);
    DefaultTableModel model = new DefaultTableModel();
    String customer_name;
    float currentEpergneObligatoire = 0;
    float withdrawingEpargneObligatoireAmount = 0;
    String account_number;

    public ViewEpargneObligatoire(String accountNumber) {
        initComponents();
        try {
            conn = new DBConnection();
        } catch (BackingStoreException ex) {
            Logger.getLogger(ViewEpargneObligatoire.class.getName()).log(Level.SEVERE, null, ex);
        }
        myEpargneObligatoire(accountNumber);
        account_number = accountNumber;
        //customer_name = prefs.get("customer_name", "");  
    }

    private ViewEpargneObligatoire() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        epargne_obligatoire_table = new javax.swing.JTable();
        withdraw = new javax.swing.JLabel();
        amount_label = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        withdraw_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        epargne_obligatoire_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Account No", "Customer Name", "Epargne Obligatoire"
            }
        ));
        jScrollPane1.setViewportView(epargne_obligatoire_table);

        withdraw.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        withdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/web-icon.png"))); // NOI18N
        withdraw.setText("WITHDRAW");
        withdraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                withdrawMouseClicked(evt);
            }
        });

        amount_label.setText("Amount: ");
        amount_label.setEnabled(false);

        amount.setEnabled(false);

        withdraw_button.setText("Withdraw");
        withdraw_button.setEnabled(false);
        withdraw_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdraw_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(amount_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(withdraw_button))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withdraw))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(withdraw)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount_label)
                    .addComponent(withdraw_button))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myEpargneObligatoire(String accountNumber) {

        //clear all rows
        DefaultTableModel dtm = (DefaultTableModel) epargne_obligatoire_table.getModel();
        dtm.setRowCount(0);
        dtm.setColumnCount(0);

        try {
            String sql = "SELECT epargne_obligatoire.Account_Number, cu.Customer_Name, Amount FROM `epargne_obligatoire` INNER JOIN customer_information cu ON cu.Account_Number = epargne_obligatoire.Account_Number WHERE epargne_obligatoire.Account_Number = ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, accountNumber);
            rs = pst.executeQuery();

            epargne_obligatoire_table.setModel(model);
            model.addColumn("Account No");
            model.addColumn("Customer Name");
            model.addColumn("Epargne Obligatoire");

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("Account_Number"), rs.getString("Customer_Name"),
                    (rs.getString("Amount"))});
                currentEpergneObligatoire = Float.parseFloat(rs.getString("Amount"));
            }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    private void updateEpargneObligatoire(String accountNumber, float newEpargneAmount) {
        try {
            String sql = "update epargne_obligatoire set Amount	='" + newEpargneAmount + "' where Account_Number='" + accountNumber + "'";
            pst = conn.connection.prepareStatement(sql);
            pst.execute();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }


    private void withdrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_withdrawMouseClicked
        // TODO add your handling code here:
        amount_label.setEnabled(true);
        amount.setEnabled(true);
        withdraw_button.setEnabled(true);
        //WithdrawEpargneObligatoire();
    }//GEN-LAST:event_withdrawMouseClicked

    private void withdraw_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdraw_buttonActionPerformed
        // TODO add your handling code here:

        if (!amount.getText().isEmpty()) {
            withdrawingEpargneObligatoireAmount = Float.parseFloat(amount.getText());
            float newEpargne = currentEpergneObligatoire - withdrawingEpargneObligatoireAmount;
            if (newEpargne >= 0) {
                System.out.println(newEpargne);
                updateEpargneObligatoire(account_number, newEpargne);
                myEpargneObligatoire(account_number);
            } else {
                JOptionPane.showMessageDialog(null, "Insufficient funds", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "The amount field is required", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_withdraw_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEpargneObligatoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEpargneObligatoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEpargneObligatoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEpargneObligatoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEpargneObligatoire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JLabel amount_label;
    private javax.swing.JTable epargne_obligatoire_table;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel withdraw;
    private javax.swing.JButton withdraw_button;
    // End of variables declaration//GEN-END:variables
}
