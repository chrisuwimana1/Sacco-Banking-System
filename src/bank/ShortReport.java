/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bank;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author chris
 */
public class ShortReport extends javax.swing.JFrame {

    /**
     * Creates new form ShortReport
     */
    PreparedStatement pst = null;
    ResultSet rs = null;
    DBConnection conn;

    public ShortReport() {
        initComponents();
        conn = new DBConnection();

        //initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        date_choice = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        specific_date = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sum_of_products = new javax.swing.JTextField();
        sum_of_expenses = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sum_of_deposits = new javax.swing.JTextField();
        sum_of_withdrawals = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        sum_of_parts_socials = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Date Filter"));

        date_choice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Specific Date" }));
        date_choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_choiceActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bank/images/Button-Next-icon.png"))); // NOI18N
        jButton1.setText("GO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        specific_date.setEnabled(false);

        jLabel2.setText("Date:");

        jLabel1.setText("Date Choice:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(specific_date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_choice, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(date_choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(specific_date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Short Summary"));

        jLabel3.setText("Sum Of Deposits:");

        jLabel5.setText("Sum Of Products:");

        sum_of_products.setText("0");

        sum_of_expenses.setText("0");

        jLabel4.setText("Sum Of Withdrawals:");

        sum_of_deposits.setText("0");

        sum_of_withdrawals.setText("0");

        jLabel6.setText("Sum Of Expenses:");

        jLabel7.setText("Sum of Parts Sociales:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)
                        .addComponent(sum_of_deposits, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sum_of_parts_socials))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(10, 10, 10)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(sum_of_products, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(sum_of_withdrawals, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sum_of_expenses)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sum_of_deposits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sum_of_withdrawals, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sum_of_products, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sum_of_expenses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sum_of_parts_socials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(678, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterDatabyDate() {
                    java.util.Date specificDate = specific_date.getDate();
            java.sql.Date sqlSpecificDate = new java.sql.Date(specificDate.getTime());
            String stringsqlSpecificDate = sqlSpecificDate.toString();
            getSumOfDeposits(stringsqlSpecificDate);
        getSumOfWithdrawals(stringsqlSpecificDate);
        
        getSumOfExpenses(stringsqlSpecificDate);
        getSumOfProducts(stringsqlSpecificDate);
        getSumOfInitialDeposits(stringsqlSpecificDate);
    }

    private void getSumOfDeposits(String currentDate) {
        try {

            String sql = "SELECT SUM(transaction_amount) AS 'total' FROM transactions WHERE transaction_type = 'deposit' AND transaction_date LIKE ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, currentDate);
            rs = pst.executeQuery();
            //System.out.println(rs.next());
            if (rs.next() == true) {
                //System.out.println(rs.next());
                
                if (rs.getString("total")== null) {
                    sum_of_deposits.setText("0");
                } else {
                    sum_of_deposits.setText(rs.getString("total"));
                }
            } else {
                System.out.println("Failed");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (Exception e) {

            }
        }
    }

    private void getSumOfWithdrawals(String currentDate) {
        try {

            String sql = "SELECT SUM(transaction_amount) AS 'total' FROM transactions WHERE transaction_type = 'Withdraw' AND transaction_date = ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1,currentDate);
            rs = pst.executeQuery();
            //System.out.println(rs.next());
            if (rs.next()) {
                if (rs.getString("total")== null) {
                    sum_of_withdrawals.setText("0");
                } else {
                    sum_of_withdrawals.setText(rs.getString("total"));
                }
            } else {
                System.out.println("Failed");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void getSumOfExpenses(String currentDate) {

        try {
            String sql = "SELECT SUM(amount) AS 'total' FROM expense WHERE expense_date LIKE ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, currentDate);
            rs = pst.executeQuery();
            //System.out.println(rs.next());
            if (rs.next()) {
                System.out.println(rs.getString("total"));
                if (rs.getString("total") == null) {
                    sum_of_expenses.setText("0");
                } else {
                    sum_of_expenses.setText(rs.getString("total"));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Can't run this query right now!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void getSumOfProducts(String currentDate) {

        try {
            String sql = "SELECT SUM(amount) AS 'total' FROM product WHERE product_date LIKE ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, currentDate);
            rs = pst.executeQuery();
            //System.out.println(rs.next());
            if (rs.next()) {
                if (rs.getString("total") == null) {
                    sum_of_products.setText("0");
                } else {
                    sum_of_products.setText(rs.getString("total"));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Can't run this query right now!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void getSumOfInitialDeposits(String currentDate) {

        try {

            String sql = "SELECT SUM(Initial_Deposit_Amount) AS 'total' FROM initial_deposit WHERE initial_deposit_date LIKE ?";
            pst = conn.connection.prepareStatement(sql);
            pst.setString(1, currentDate);
            rs = pst.executeQuery();
            //System.out.println(rs.next());
            if (rs.next() == true) {
                //System.out.println(rs.next());
                if (rs.getString("total").isEmpty()) {
                    sum_of_parts_socials.setText("0");
                } else {
                    sum_of_parts_socials.setText(rs.getString("total"));
                }
            } else {
                System.out.println("Failed");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (Exception e) {

            }
        }
    }

    private void filterData() {
        java.sql.Date currentDate = new java.sql.Date(new java.util.Date().getTime());
        String sqlCurrentDate = currentDate.toString();      getSumOfWithdrawals(sqlCurrentDate);
        getSumOfDeposits(sqlCurrentDate);
        getSumOfExpenses(sqlCurrentDate);
        getSumOfProducts(sqlCurrentDate);
        getSumOfInitialDeposits(sqlCurrentDate);

    }

    private void date_choiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_choiceActionPerformed
        // TODO add your handling code here:
        if (date_choice.getSelectedItem().toString().equalsIgnoreCase("Specific Date")) {
            specific_date.setEnabled(true);

        } else {
            specific_date.setEnabled(false);
        }
    }//GEN-LAST:event_date_choiceActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (date_choice.getSelectedItem().toString().equalsIgnoreCase("Specific Date") && specific_date.getDate() != null) {
            java.util.Date specificDate = specific_date.getDate();
            java.sql.Date sqlSpecificDate = new java.sql.Date(specificDate.getTime());
            filterDatabyDate();
        } else if (date_choice.getSelectedItem().toString().equalsIgnoreCase("Daily")) {
            filterData();
        } else {
            JOptionPane.showMessageDialog(null, "Please pick the specific date!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShortReport.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShortReport.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShortReport.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShortReport.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShortReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> date_choice;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.toedter.calendar.JDateChooser specific_date;
    private javax.swing.JTextField sum_of_deposits;
    private javax.swing.JTextField sum_of_expenses;
    private javax.swing.JTextField sum_of_parts_socials;
    private javax.swing.JTextField sum_of_products;
    private javax.swing.JTextField sum_of_withdrawals;
    // End of variables declaration//GEN-END:variables

}
